%!PS-Adobe-2.0
%%Creator: dvipsk 5.55a Copyright 1986, 1994 Radical Eye Software
%%Title: main.dvi
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips main -o main.ps
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1997.04.30:1251
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (main.dvi)
@start /Fa 10 122 df<EA0390EA0C701218EA303013601260A3EAC0C013C812401241
EA62D0EA1C700D0E7C8D12>97 D<EA0780EA1840EA302012601340EAFF80EAC000A41320
1340EA6180EA3E000B0E7C8D10>101 D<123E120CA41218A41230A41260A412C012C8A3
12D0126007177D9609>108 D<3830783C38498CC6384E0502EA4C06389C0E06EA180CA3
48485A15801418A23960300900140E190E7D8D1D>I<EA0780EA18C0EA3040EA6060A212
C0A3EA80C0A2EA8180EAC1001246123C0B0E7B8D12>111 D<EA30F0EA4B18EA4E38EA4C
30EA98001218A35AA45AA20D0E7D8D0F>114 D<EA0780EA0C40EA18E0A2EA3800121EEA
1F80EA07C01200126012E0EAC180EAC300123E0B0E7D8D0F>I<1206A25AA4EAFF80EA18
00A35AA45A1261A212621264123809147D930C>I<EA3804EA2C0C124CA2EA8C181218A3
EA30301332A21372EA18B4EA0F1C0F0E7D8D13>I<EA3804EA2C0C124CA2EA8C181218A3
EA3030A31370EA18E0EA0F60120013C012E0EAE180EA4300123C0E147D8D11>121
D E /Fb 12 113 df<126012F0A212701210A21220A21240A2040A7D830A>59
D<130813181330A31360A313C0A3EA0180A3EA0300A21206A35AA35AA35AA35AA35AA20D
217E9812>61 D<12C012F0123C120EEA0380EA01E0EA0078131E1307EB01C0EB00F0A2EB
01C0EB0700131E1378EA01E0EA0380000EC7FC123C12F012C014167D921B>I<0007B512
803800E003EC0100A3EA01C0A21440A248485A138113FF1381D80701C7FC1402A26D5A12
0E140C14081418481370B512F019177F961A>69 D<EB1F81EBF062380180163807000E12
0E4813045A123012700060130012E0A338C007FEEB0070A27E14E012601270EA3001380C
06C03803F84018177E961B>71 D<EA0710EA18F0EA30701260136012C0A3EA80C013C4A2
12C1EA46C8EA38700E0E7E8D13>97 D<133E130CA41318A4EA0730EA18F0EA3070126013
6012C0A3EA80C013C4A212C1EA46C8EA38700F177E9612>100 D<EA07C0EA1C20EA3010
12601320EAFFC0EAC000A41310EA4020EA60C0EA1F000C0E7E8D10>I<120313801300C7
FCA6121C12241246A25A120C5AA31231A21232A2121C09177F960C>105
D<38383C1E3844C6633847028138460301388E0703EA0C06A338180C061520140C154039
301804C0EC07001B0E7F8D1F>109 D<EA383CEA44C6EA47021246EA8E06120CA3485A14
4013181480EA3009EB0E00120E7F8D15>I<EA1C3CEA2246EA2382130312461206A3EA0C
06A2130C1308EA1A30EA19E0EA1800A25AA312FC1014808D12>112
D E /Fc 2 51 df<1218127812981218AC12FF08107D8F0F>49 D<121FEA6180EA40C0EA
806012C01200A213C0EA0180EA030012065AEA10201220EA7FC012FF0B107F8F0F>I
E /Fd 18 119 df<120212041208121812101230122012601240A212C0AA1240A2126012
20123012101218120812041202071E7D950D>40 D<128012401220123012101218120812
0C1204A21206AA1204A2120C1208121812101230122012401280071E7E950D>I<1360AA
B512F0A238006000AA14167E9119>43 D<120FEA30C0EA6060A2EA4020EAC030A9EA4020
EA6060A2EA30C0EA0F000C137E9211>48 D<120C121C12EC120CAFEAFFC00A137D9211>
I<121FEA60C01360EAF07013301260EA0070A2136013C012011380EA02005AEA08101210
EA2020EA7FE012FF0C137E9211>I<EA0FC0EA3070EA7038A31200133013E0EA0FC0EA00
7013381318131C126012F01318EAE038EA6070EA1FC00E137F9211>I<136013E0A2EA01
6012021206120C120812101220126012C0EAFFFCEA0060A5EA03FC0E137F9211>I<387F
FFE0B512F0C8FCA6B512F06C13E0140A7E8B19>61 D<EA0FE0EA18701220EA6020EAC000
A51260EA2010EA1820EA0FC00C0D7F8C0F>99 D<13781318A6EA0F98EA1878EA2038EA60
1812C0A51260EA2038EA1858EA0F9E0F147F9312>I<EA0F80EA1040EA2020EA6030EAC0
10EAFFF0EAC000A31260EA2010EA1820EA0FC00C0D7F8C0F>I<1220127012201200A512
F01230AB12FC06157F9409>105 D<EAF3E0EA3430EA38181230A9EAFC7E0F0D7F8C12>
110 D<EAF3C0EA34E01238EA30401300A812FE0B0D7F8C0D>114
D<EA3E80126112C0A2EAE000127EEA3F80EA03C01280A212C0EAE180EA9F000A0D7F8C0D
>I<1210A312301270EAFF80EA3000A71380A3EA1100120E09127F910D>I<EAF83CEA3018
1310EA3830EA1820A2EA0C40A2EA0680A3EA0300A20E0D7F8C11>118
D E /Fe 14 111 df<B61280A219027D8A20>0 D<0040132000C01360006013C0383001
8038180300EA0C066C5A6C5AEA01B0EA00E0A2EA01B0EA0318EA060C487E487E38300180
386000C04813600040132013147A9320>2 D<90387FFF800003B5FCD80780C7FC000CC8
FC5A5AA25AA25AA81260A27EA27E120E6C7E0001B512806C7E191A7D9620>26
D<153081A381A281811680ED00C0B712F8A2C912C0ED0380160015065DA25DA35D25167E
942A>33 D<152015E01401A21403A21405A21409A2141114311421146114411481130114
0113031306130490380FFFF05BEB3000A25BEA60C0D8718013F8127F48C7127E007E147C
003C14001F20809D21>65 D<EB603F3901E1FF803907E30FC03801EC07EBD80313F8D803
F0138013E0EC07001404EBC01800071360EB83C0EB8FF8EB93FCEB007E48133E80A2000E
7FA2121E001C130EA2003C5B38398018383BC0203877E0C0D863FFC7FCEAC1FC1A1E7F9C
1B>I<0078130C00FC131E003E131F121E6C130F14076C130314021380A200031304A214
0814181430A2146014C0EB81801383EB8700138E139C13B813F05B485A5B0006C7FC1204
181E7E9B19>86 D<00780103130600FC49130F123E6C14806C010F13076C011B1303EB80
13913833C00200031323144102C11304EC81E00181140814000182141013860184142001
8CEBF0600198144049EB70C0ED71804848EB73005B491376157C90C71278120648147000
0814601540281E7E9B29>I<13FE3803FF80380F01E0381C00700030131848130CA24813
06B200401302171A7E981C>92 D<133C13E0EA01C013801203AD13005A121C12F0121C12
077E1380AD120113C0EA00E0133C0E297D9E15>102 D<12F0121C12077E1380AD120113
C0EA00E0133C13E0EA01C013801203AD13005A121C12F00E297D9E15>I<12C0B3B3A502
297B9E0C>106 D<EA4020EAC030B3B3A4EA40200C2A7C9E15>I<12C0A21260A37EA37EA3
7EA37EA27EA3EA0180A3EA00C0A31360A21330A31318A3130CA31306A31303130110297E
9E15>110 D E /Ff 29 120 df<EAFFF8A40D04808A10>45 D<EA03F8EA0F1EEA1C0700
3C1380EA3803007813C0A300F813E0AC007813C0A200381380EA3C07001C1300EA0F1EEA
03F8131B7E9A18>48 D<1360EA01E0120F12FF12F31203B3A2387FFF80A2111B7D9A18>
I<EA07F8EA1FFEEA3C1FEB0F80387C07C0127E127C123838000F80A2EB1E005BEA03F8EA
001EEB0F80EB07C0A214E01230127812FCA214C038780F80EB1F00EA1FFEEA07F8131B7E
9A18>51 D<137EEA03FF38078180380F03C0EA1E07123C387C03800078C7FCA212F813F8
EAFB0E38FA0780EAFC0314C000F813E0A41278A214C0123CEB0780381E0F00EA07FEEA03
F8131B7E9A18>54 D<1260387FFFE0A214C01480A238E00300EAC0065B5BC65AA25B13E0
A212015B1203A41207A66C5A131C7D9B18>I<EA03F8EA0FFE381E0F80EA3807EB03C012
78127C127E387F8380383FC70013FE6C5A6C7E6C7E001D138038387FC038781FE0EA700F
EAF0031301A3007813C0EB0380EA3E07381FFE00EA03F8131B7E9A18>I<B512F814FF39
0FC01F80EC0FC0140715E0A515C0EC0F80EC3F00EBFFFE9038C00F80EC07C0EC03E0A215
F0A5EC07E0A2EC1FC0B6120014FC1C1C7E9B22>66 D<39FFE003FFA2390FF000307FEA0D
FCEA0CFE137E7FEB1F8014C0EB0FE0EB07F01303EB01F814FCEB00FE147F143FEC1FB015
F0140F1407140314011400A2D8FFC013701530201C7E9B25>78 D<3807F820381FFEE0EA
3C07EA7801EA700012F01460A26C130012FEEAFFE0EA7FFE6C7E1480000F13C06C13E0EA
007FEB03F01301130012C0A214E07E38F001C0EAFC0338EFFF00EA83FC141C7D9B1B>83
D<EA0FF8EA1C1E383E0F80130714C0121C1200137FEA07E7EA1F07123C127C12F8A3EA78
0B383E13F8EA0FE115127F9117>97 D<B4FCA2121FA9EB3F80EBE1E0EB8070EB0078143C
A2143EA6143CA21478EB8070381EC1E0381C3F00171D7F9C1B>I<EA03FCEA0E0EEA1C1F
123C1278130E00F8C7FCA61278EB0180123C381C0300EA0E0EEA03F811127E9115>I<EB
0FF0A21301A9EA01F9EA0F07EA1C03EA3C011278A212F8A61278A2123CEA1C03380F0FFE
EA03F9171D7E9C1B>I<EA03FCEA0F07381C0380383C01C0127814E012F8A2B5FC00F8C7
FCA3127814607E6C13C0380F03803801FC0013127F9116>I<3803F0F0380E1F38EA3C0F
3838073000781380A400381300EA3C0FEA1E1CEA33F00030C7FCA3EA3FFF14C06C13E014
F0387801F838F00078A300701370007813F0381E03C03807FF00151B7F9118>103
D<B4FCA2121FA9EB0FC0EB31E0EB40F0EB80F8A21300AB38FFE7FFA2181D7F9C1B>I<12
1E123FA4121EC7FCA6127FA2121FAEEAFFC0A20A1E7F9D0E>I<39FF0FC07E903831E18F
3A1F40F20780D980FC13C0A2EB00F8AB3AFFE7FF3FF8A225127F9128>109
D<38FF0FC0EB31E0381F40F0EB80F8A21300AB38FFE7FFA218127F911B>I<EA01FC380F
0780381C01C0003C13E0387800F0A200F813F8A6007813F0A2383C01E0381E03C0380F07
803801FC0015127F9118>I<38FF3F80EBE1E0381F80F0EB0078147C143C143EA6143C14
7C1478EB80F0EBC1E0EB3F0090C7FCA6EAFFE0A2171A7F911B>I<3803F060380F0CE0EA
1E07EA3C03127C127812F8A61278127C123CEA1C07EA0E0FEA03F3EA0003A6EB1FFCA216
1A7E9119>I<EAFE3E1347381E8F80A3381F070090C7FCAAEAFFE0A211127F9114>I<EA1F
D8EA3078EA601812E0A2EAF000EAFF80EA7FE013F0EA1FF8EA07FCEA007CEAC01CA212E0
1318EAF830EACFC00E127E9113>I<1203A45AA25AA2EA3FFC12FFEA1F00A9130CA4EA0F
08EA0798EA03F00E1A7F9913>I<38FF07F8A2EA1F00AC1301120F380786FFEA01F81812
7F911B>I<38FFC1FCA2381F00601380000F13C0A23807C180A23803E300A213F7EA01F6
13FE6C5AA21378A2133016127F9119>I<39FF8FF8FEA2391F03E030A3390F87F0601386
9038C6F8E03907CC78C0A23903FC7D80EBF83D143F3901F01F00A20000131EEBE00EA21F
127F9122>I E /Fg 55 122 df<B512C0EA1C01EB0040A21420A31400AFEAFFC013177F
9616>0 D<13FCEA0782EA0E07121C130290C7FCA4B5FCEA1C07AC387F1FC01217809614>
12 D<120112021204120C1218A21230A212701260A312E0AA1260A312701230A21218A2
120C12041202120108227D980E>40 D<12801240122012301218A2120CA2120E1206A312
07AA1206A3120E120CA21218A2123012201240128008227E980E>I<126012F0A2127012
10A21220A21240A2040A7D830A>44 D<EAFF80A2090280870C>I<126012F0A212600404
7D830A>I<EA07C0EA1830EA3018EA701CEA600CA2EAE00EA9EA600CA2EA701CEA3018EA
1C70EA07C00F157F9412>48 D<1206120E12FE120EB1EAFFE00B157D9412>I<EA0F80EA
30E0EA4070EA8030EAC03812E0124012001370A2136013C0EA0180EA03001206EA0C0812
08EA1018EA3FF0127F12FF0D157E9412>I<EA0FE0EA3030EA6018EA701CA21200131813
381360EA07E0EA00301318130C130EA212E0A2EAC00CEA4018EA3030EA0FE00F157F9412
>I<1330A2137013F012011370120212041208121812101220124012C0EAFFFEEA0070A5
EA03FE0F157F9412>I<EA6030EA7FE013C0EA44001240A4EA4F80EA70E0EA4070EA0030
1338A2124012E0A2EA8030EA4060EA20C0EA1F000D157E9412>I<EA01F0EA0608EA080C
EA181C1230EA7000126012E0EAE3E0EAEC30EAF018130CEAE00EA31260A2EA300C1318EA
1830EA07C00F157F9412>I<EA07E0EA1830EA2018EA600CA21270EA7818EA3E10EA1F60
EA07C0EA0FF0EA18F8EA607C131EEAC00E1306A21304EA600CEA3830EA0FE00F157F9412
>56 D<126012F0A212601200A6126012F0A21260040E7D8D0A>58
D<B512FCA2C8FCA6B512FCA2160A7E8C1B>61 D<13FCEA0303380C00C000101320382078
10EA218438430208384701C8008613C4128EA512861247EA4303382184C8382078706CC7
FC000C131C000313F03800FF0016177E961B>64 D<13101338A3135CA3138EA3EA0107A2
38020380A33807FFC0EA0401A2380800E0A2001813F0123838FE03FE17177F961A>I<EA
FFFE381C0380EB00E014601470A414E0EB01C0381FFF8014C0381C00E0147014301438A4
147014E0EB01C0B5120015177F9619>I<EBFC1038038330380E00B04813704813301230
00701310126012E01400A51410126012700030132012386C13406C138038038300EA00FC
14177E9619>I<B512E0EA1C00146014201410A3EB0400A3130CEA1FFCEA1C0C1304A390
C7FCA6EAFFC014177F9617>70 D<EB7E0838038198380600584813384813185A00701308
A25A1400A4EB03FEEB00381270A212307E7E7E380380D838007F0817177E961C>I<EAFF
E0EA0E00B3A3EAFFE00B177F960D>73 D<EAFFC0001CC7FCAD1420A31460A2144014C013
03B5FC13177F9616>76 D<00FEEB03F8001E14C000171305A338138009A23811C011A338
10E021A2EB7041A3EB3881A2EB1D01A2130EA2123839FE040FF81D177F9620>I<00FC13
FE001E1338001F13101217EA1380EA11C0A2EA10E013701338A2131C130E130F1307EB03
90EB01D0A2EB00F014701430123800FE131017177F961A>I<EAFFFE381C0380EB00C014
601470A4146014C0EB0380381FFE00001CC7FCAAB47E14177F9618>80
D<387FFFF83860381800401308A200801304A300001300AF3803FF8016177F9619>84
D<38FF80FE381C00381410B06C132012066C13403801818038007E0017177F961A>I<12
FCA212C0B3AB12FCA206217D980A>91 D<12FCA2120CB3AB12FCA2062180980A>93
D<EA3FC0EA70601330EA20381200EA03F8EA1E3812301270EAE039A21379EA70FFEA1F1E
100E7F8D12>97 D<12F81238A8EA39F0EA3E0CEA380613077F1480A414005B1306EA361C
EA21F011177F9614>I<EA07F0EA18381230EA7010EA600012E0A41260EA70081230EA18
30EA07C00D0E7F8D10>I<133E130EA8EA07CEEA1C3EEA300E1270126012E0A412601270
EA301EEA182E3807CF8011177F9614>I<EA0FC0EA1860EA3030EA7038EAE018EAFFF8EA
E000A31260EA7008EA3010EA1830EA07C00D0E7F8D10>I<EA03E0EA0670120EEA1C2013
00A5EAFF80EA1C00ACEA7F800C1780960B>I<EA0F9EEA18E3EA3060EA7070A3EA3060EA
18C0EA2F80EA20001260EA3FE013F813FCEA600EEAC006A3EA600CEA3838EA0FE010157F
8D12>I<12F81238A813F8EA3B1CEA3C0E1238AA38FE3F8011177F9614>I<12301278A212
301200A512F81238AC12FE07177F960A>I<12F81238A8133E13381330134013801239EA
3FC0EA39E0123813F01378133CA2EAFE7F10177F9613>107 D<12F81238B3A312FE0717
7F960A>I<38F8F83E383B1CC7393C0F0380EA380EAA39FE3F8FE01B0E7F8D1E>I<EAF8F8
EA3B1CEA3C0E1238AA38FE3F80110E7F8D14>I<EA07C0EA1830EA3018EA600CA2EAE00E
A5EA701CEA3018EA1830EA07C00F0E7F8D12>I<EAF9F0EA3E1CEA380613077F1480A414
005B130EEA3E1CEA39F00038C7FCA512FE11147F8D14>I<EA07C2EA1C26EA381EEA700E
126012E0A412601270EA301EEA1C2EEA07CEEA000EA5EB3F8011147F8D13>I<EAF9E0EA
3A70123CEA38201300A9B4FC0C0E7F8D0E>I<EA1F40EA60C0EAC040A2EAE000B4FCEA7F
80EA1FC0EA01E0EA8060A212C0EAE0C0EA9F000B0E7F8D0E>I<1208A31218A21238EAFF
C0EA3800A71340A4EA1C80EA0F000A147F930E>I<EAF83EEA380EAA131EEA1C2E3807CF
80110E7F8D14>I<EAFE1FEA380EEA3C0CEA1C08A2EA0E10A2EA0720A213E0EA03C0A2EA
0180A2100E7F8D13>I<38FEFE7C383838381410133C001C1320134C381E4E60380ECE40
1387000713801303A200031300EA0201160E7F8D19>I<EAFE1FEA380EEA3C0CEA1C08A2
EA0E10A2EA0720A213E0EA03C0A2EA0180A21300A212E2A212A4127810147F8D13>121
D E /Fh 1 4 df<120CA2EACCC012EDEA7F80EA0C00EA7F80EAEDC012CCEA0C00A20A0B
7D8B10>3 D E /Fi 8 116 df<5B5B5B1480130B131B13131323A21343138314C0EA0101
EA03FFEA02011204120C1208001813E038FE07F815147F9319>65
D<3807FFE03800E0383801C018141CA338038038147014E0EBFFC0380700E01470143014
38000E1370A214E0A2381C038038FFFE0016147F9319>I<3907E01FC00000EB06003801
7004A21338A238021C08A2130EA2486C5AA2EB0390A2380801E0A21300A20018134012FE
1A147F931A>78 D<381FFFF838381C18EA2038140812401410EA807000001300A35BA448
5AA4485AEA3FF81514809314>84 D<121E12065AA45A1338135C139CEA3118EA36001238
EA3F80EA61C0EA60C8A3EAC0D013600E147F9312>107 D<EA30F8EA590C124E129C1298
1218A2EA301813191331A2EA6032131C100D7F8C15>110 D<EA31E0EA5A70124CEA9C60
EA98001218A25AA45AA20C0D7F8C0F>114 D<1207EA1880EA19C0EA3180EA3800121E7E
EA0380124112E1EAC1001282127C0A0D7E8C10>I E /Fj 7 83 df<12C0B3A9021B7A80
0E>12 D<1306130C131813301370136013C012011380120313005A1206120E120C121CA2
12181238A312301270A65AB21270A612301238A31218121CA2120C120E120612077E1380
120113C012001360137013301318130C13060F4A788119>16 D<12C012607E7E121C120C
7E12077E1380120113C0120013E013601370A213301338A31318131CA6130EB2131CA613
181338A313301370A2136013E013C012011380120313005A12065A121C12185A5A5A0F4A
7F8119>I<1430146014C0EB0180EB03005B130E130C5B1338133013705B5B12015B1203
A290C7FC5A1206120EA2120C121CA312181238A45AA75AB3A31270A77EA41218121CA312
0C120EA2120612077E7FA212017F12007F13701330133813187F130E7F7FEB0180EB00C0
14601430146377811F>I<12C012607E7E7E120E7E7E6C7E7F12007F1370133013381318
131CA2130C130E13061307A27F1480A3130114C0A4EB00E0A71470B3A314E0A7EB01C0A4
14801303A314005BA21306130E130C131CA213181338133013705B5B12015B48C7FC5A12
0E120C5A5A5A5A14637F811F>I<B712F0A20070C7EA0FF8007814006C1538001C151C6C
150C000F15046C15066C6C14026D14006C7E1200137013787F131C131E7F7F6D7EA291C8
FC5B13065B5B133813305B5B120149140248C8120600061504000E150C000C151C481538
4815F80070140F007FB612F0B7FC272A7E7F2C>80 D<14F8EB0184EB0306EB060E1404EB
0E00A35BAA5BAA5BAA5BA3EA40C012E0EAC1800043C7FC123E172E7E7F14>82
D E /Fk 2 49 df<B512C0A212027D871A>0 D<1204120EA2121CA31238A212301270A2
1260A212C0A2070F7F8F0A>48 D E /Fl 45 125 df<EAFFC0A30A037D890F>45
D<1230127812F0126005047C830D>I<1418A21438A21478A214B8EB0138A2EB023C141C
1304130C13081310A21320A2EB7FFCEBC01C1380EA0100141E0002130EA25A120C001C13
1EB4EBFFC01A1D7E9C1F>65 D<48B5FC39003C038090383801C0EC00E0A35B1401A2EC03
C001E01380EC0F00141EEBFFFC3801C00E801580A2EA0380A43907000F00140E141E5C00
0E13F0B512C01B1C7E9B1D>I<903803F02090381E0C6090383002E09038E003C03801C0
01EA038048C7FC000E1480121E121C123C15005AA35AA41404A35C12705C6C5B00185B6C
485AD80706C7FCEA01F81B1E7A9C1E>I<48B5FC39003C03C090383800E0A21570A24913
781538A215785BA4484813F0A315E03803800115C0140315803907000700140E5C5C000E
13E0B512801D1C7E9B1F>I<48B512F038003C00013813301520A35BA214081500495AA2
1430EBFFF03801C020A439038040801400A2EC0100EA07005C14021406000E133CB512FC
1C1C7E9B1C>I<48B512F038003C00013813301520A35BA214081500495AA21430EBFFF0
3801C020A448485A91C7FCA348C8FCA45AEAFFF01C1C7E9B1B>I<903803F02090381E0C
6090383002E09038E003C03801C001EA038048C7FC000E1480121E121C123C15005AA35A
A2903801FF809038001E00141CA400705BA27E001813786C139038070710D801F8C7FC1B
1E7A9C20>I<EA03FFEA00781370A413E0A4EA01C0A4EA0380A4EA0700A4120EA4121EEA
FFC0101C7D9B10>73 D<3801FFC038003C001338A45BA45BA4485AA438038002A31404EA
0700140C14181438000E13F0B5FC171C7E9B1A>76 D<D801FEEB01FED8003E14E0012EEB
03C01505A21509014EEB0B801513152313470187EB4700A21587EC0107D80107130E1402
1404A20002495AEB0388149014A000045C14C0A2000C1380001CEB007839FF8307FF271C
7E9B25>I<D801FCEBFF80D8001CEB1C00012E13181510A2132701475B13431480A29038
81C040A3EB80E0D801005B1470A300020139C7FCA3141D48131E140EA2120C001C1304EA
FF80211C7E9B1F>I<EB07F0EB1C1CEB700E497E3901C00380EA0380EA0700000E14C012
1E121C123CA25AA348EB0780A3EC0F00A2140E141E5C007013385C00785B383801C06C48
5AD80E0EC7FCEA03F81A1E7A9C20>I<3801FFFE39003C038090383801C0EC00E0A3EB70
01A315C0EBE0031580EC0700141C3801FFF001C0C7FCA3485AA448C8FCA45AEAFFE01B1C
7E9B1C>I<EB0F84EB304CEB403CEB8018EA01005AA200061310A214001207A2EA03E013
FC6CB4FC38007F80EB07C01301A21300A21220A238600180A2EB03001302EAF004EACC18
EA83E0161E7D9C17>83 D<001FB512C0381C070138300E0000201480126012405B1280A2
000014005BA45BA45BA4485AA41203EA7FFE1A1C799B1E>I<397FF03FE0390F00070000
0E13061404A3485BA4485BA4485BA4485BA35CA249C7FCEA60025B6C5AEA1830EA07C01B
1D789B1F>I<EA01E3EA0717EA0C0F1218EA380E12301270A2EAE01CA41339A3EA6079EA
319AEA1E0C10127C9115>97 D<123F1207A2120EA45AA4EA39E0EA3A18EA3C0C12381270
130EA3EAE01CA31318133813301360EA60C0EA3180EA1E000F1D7C9C13>I<13F8EA0304
120EEA1C0EEA181CEA30001270A25AA51304EA60081310EA3060EA0F800F127C9113>I<
EB07E01300A2EB01C0A4EB0380A43801E700EA0717EA0C0F1218EA380E12301270A2485A
A41339A3EA6079EA319AEA1E0C131D7C9C15>I<13F8EA0704120CEA1802EA38041230EA
7008EA7FF0EAE000A5EA60041308EA30101360EA0F800F127C9113>I<EB03C0EB067013
0CEB1C601400A25BA53803FF8038007000A55BA5485AA5485AA390C7FCA25A12C612E65A
12781425819C0D>I<EB78C0EA01C5EA03031206000E1380120C121CA238380700A4130E
A3EA181EEA0C7CEA079CEA001CA25BA2EAC030EAE070EAC1C0007FC7FC121A7E9113>I<
EA0FC01201A2485AA448C7FCA4EA0E3E13C3380F0380120E121E121CA338380700A3130E
00701340A2131C1480EAE00C38600700121D7E9C15>I<EA01801203EA0100C7FCA7121C
12261247A2128EA2120E5AA35AA21271A31272A2123C091C7C9B0D>I<13031307130313
00A71378138CEA010C1202131C12041200A21338A41370A413E0A4EA01C0A2EAC180EAE3
0012C612781024819B0D>I<EA0FC01201A2485AA448C7FCA4380E07801308EB11C01321
381C4180EB8000001DC7FC121EEA3FC0EA38E01370A2EA7071A31372EAE032EA601C121D
7E9C13>I<EA1F801203A2EA0700A4120EA45AA45AA45AA412E2A312E412641238091D7D
9C0B>I<391C1E078039266318C0394683A0E0384703C0008E1380A2120EA2391C0701C0
A3EC0380D8380E1388A2EC0708151039701C032039300C01C01D127C9122>I<EA383EEA
4CC3384D0380124E129E129C121CA238380700A3130E00701340A2131C1480EAE00C3860
070012127C9117>I<13F8EA030CEA0E06487E1218123000701380A238E00700A3130EA2
5BEA60185BEA30E0EA0F8011127C9115>I<380387803804C860EBD03013E0EA09C01438
1201A238038070A31460380700E014C0EB0180EB8300EA0E86137890C7FCA25AA45AB4FC
151A809115>I<EA01E1EA0713EA0C0F1218EA380E12301270A2EAE01CA41338A3EA6078
EA31F0EA1E701200A213E0A4EA01C0EA0FF8101A7C9113>I<EA1C3CEA2642EA4687EA47
07EA8E061300120EA25AA45AA45A123010127C9112>I<EA01F0EA0608120C131CEA1818
EA1C00121F13C0EA0FF01207EA00781338EA603012E012C0EA8060EA60C0EA1F000E127D
9111>I<12035AA3120EA4EAFFE0EA1C00A35AA45AA4EAE080A2EAE100A2126612380B1A
7C990E>I<381C0180EA2E03124EA2388E0700A2121CA2EA380EA438301C80A3EA383C38
184D00EA0F8611127C9116>I<EA1C06EA2E0EEA4E06A2EA8E02A2121CA2EA3804A31308
1230A21310EA3820EA1840EA0F800F127C9113>I<381E01833827038712471483388707
01A2120EA2381C0E02A31404EA180C131C1408EA1C1E380C26303807C3C018127C911C>
I<38038780380CC840380870E012103820E0C014001200A2485AA4EA03811263EAE38212
C5EA8584EA787813127E9113>I<381C0180EA2E03124EA2388E0700A2121CA2EA380EA4
EA301CA3EA383CEA1878EA0FB8EA003813301370EAE0605BEA81800043C7FC123C111A7C
9114>I<EA01C1EA07E1EA0FF6EA081CEA1008EA0010132013401380EA010012025AEA08
041210EA2C0CEA73F8EA41F0EA80E010127E9111>I<B712F825017B8B2A>124
D E /Fm 25 122 df<38078010EA1FC0383FE020EA7FF038603040EAC018388008801200
1304EB0500A21306A31304A3130CA35BA45BA21320141B7F9115>13
D<126012F0A2126004047C830C>58 D<126012F0A212701210A41220A212401280040C7C
830C>I<140CA2141CA2143C145CA2149E148EEB010E1302A21304A213081310A2497EEB
3FFFEB40071380A2EA0100A212025AA2001C148039FF803FF01C1D7F9C1F>65
D<48B5FC39003C01C090383800E015F01570A25B15F0A2EC01E09038E003C0EC0780EC1F
00EBFFFC3801C00FEC0780EC03C0A2EA0380A439070007801500140E5C000E1378B512C0
1C1C7E9B1F>I<903801F80890380E0618903838013890386000F048481370485A48C712
30481420120E5A123C15005AA35AA45CA300701302A200305B00385B6C5B6C1360380701
80D800FEC7FC1D1E7E9C1E>I<48B512F839003C0078013813181510A35BA21408150049
5AA21430EBFFF03801C020A4390380404014001580A23907000100A25C1406000E133EB5
12FC1D1C7E9B1F>69 D<903801F80890380E0618903838013890386000F048481370485A
48C71230481420120E5A123C15005AA35AA2EC7FF0EC07801500A31270140E123012386C
131E6C136438070184D800FEC7FC1D1E7E9C21>71 D<D801FCEBFF80D8001CEB1C00012E
13181510A2132701475B13431480A2903881C040A3EB80E0D801005B1470A300020139C7
FCA3141D48131E140EA2120C001C1304EAFF80211C7E9B21>78 D<48B5FC39003C03C090
383800E015F01570A24913F0A315E0EBE001EC03C0EC0700141E3801FFF001C0C7FCA348
5AA448C8FCA45AEAFFE01C1C7E9B1B>80 D<EB03F8EB0E0E90383803809038E001C0EA01
C039038000E048C7FC4814F0121E121C123CA25AA348EB01E0A3EC03C0A215801407EC0F
0038703C0EEB421C383882385C381C83C0380787813801FF01380003031402148E14FC5C
130114E01C257E9C21>I<3801FFFE39003C03C090383800E015F01570A24913F0A3EC01
E001E013C0EC0780EC1E00EBFFF03801C038140C140EA2EA0380A43807001E1508A21510
48130FD8FFE01320C7EA03C01D1D7E9B20>I<39FFC00FF0391C00038015001402A25C5C
121E000E5B143014205CA25C49C7FC120FEA07025BA25BA25B5BEA03A013C05BA290C8FC
A21C1D7D9B18>86 D<3AFFC0FFC0FF3A3C001C003C001C1510143C1620025C1340A2029C
1380A29039011C0100A20102130213045D01085BA2496C5A121ED80E205BA201405B0180
13C05D260F000FC7FCA2000E130EA2000C130CA2281D7D9B27>I<EB07E01300A2EB01C0
A4EB0380A43801E700EA0717EA0C0F1218EA380E12301270A2485AA4EB3880A3EA607838
319900EA1E0E131D7E9C16>100 D<EA01C01203A2EA0180C7FCA6121C12271247A21287
A2120EA25AA35A1380A21270EA71001232121C0A1C7E9B0E>105
D<1307130FA213061300A61378139CEA010C1202131C12041200A21338A41370A413E0A4
EA01C01261EAF180EAF30012E6127C1024809B11>I<EA0FC01201A2485AA448C7FCA4EA
0E07EB0880EB11C01323381C4780EB8300001DC7FC121EEA3FC0EA38E01370A2EA7071A3
1372EAE032EA601C121D7E9C16>I<39381F81F0394E20C618394640E81CEB80F0EA8F00
008E13E0120EA2391C01C038A315703938038071A215E115E23970070064D83003133820
127E9124>109 D<EA3C1F384E6180384681C0EA4701128F128E120EA2381C0380A3EB07
0000381310A2130E1420387006403830038014127E9119>I<EA01F0EA060CEA0C04130E
EA180CEA1C00121FEA0FE013F0EA03F8EA0038EA201CEA701812F01310EA8030EA6060EA
1F800F127E9113>115 D<001C13C0EA27011247A238870380A2120EA2381C0700A43818
0E20A3EA1C1E380C26403807C38013127E9118>117 D<EA1C03EA270712471303EA8701
A2120EA2EA1C02A3130412181308A2EA1C10EA0C20EA07C010127E9114>I<3807878038
08C8403810F0C03820F1E0EBE3C03840E1803800E000A2485AA43863808012F3EB810012
E5EA84C6EA787813127E9118>120 D<001C13C0EA27011247A238870380A2120EA2381C
0700A4EA180EA3EA1C1EEA0C3CEA07DCEA001C1318EA6038EAF0305B485AEA4180003EC7
FC121A7E9114>I E /Fn 29 122 df<130E131E137EEA07FE12FFA212F81200B3ABB512
FEA317277BA622>49 D<EBFF80000713F04813FC381E03FE393800FF80007C133F00FE14
C06C131F15E0140FA2127E003C131FC7FC15C0A2EC3F801500147E5C5C495A495AEB0780
49C7FC131E4913E013705B3901C001C0EA0380EA0600000FB5FC5A5A5AB61280A31B277D
A622>I<EB7F803803FFF04813FC380F81FE381F007FEA3F80EC3F80A3121F1300C7EA7F
00A2147E5C495AEB07F0EBFFC0A2EB01F8EB007E801580EC1FC0A215E0A2123C127EB4FC
A215C0143F481480007CEB7F00383F01FE6CB45A000713F0C613801B277DA622>I<B712
C0A33903FC003FED0FE015031501A21500A316F0913801C070A316001403A2140F90B5FC
A3EBFC0F1403A21401A491C8FCA9B512FCA324297EA82A>70 D<91387FE003903907FFFC
07011FEBFF0F90397FF00F9F9039FF0001FFD801FC7F484880484880484880485A82485A
82127FA290CAFC5AA892B512F87E7F03001300123FA26C7EA26C7E6C7E6C7E6C7E6CB45B
90387FF007011FB5129F0107EBFE0F9039007FF0032D297CA835>I<D8FFFE92383FFF80
A26D5D0003EFE000A2D9BF8014EFA2D99FC0EB01CFA2D98FE0EB038FA3D987F0EB070FA2
D983F8130EA2D981FC131CA3D980FE1338A2027F1370A291383F80E0A391381FC1C0A291
380FE380A2913807F700A3EC03FEA26E5AA26E5AD8FFFE0203B51280A2157039297DA840
>77 D<ECFFC0010F13FC90383F807F9039FE001FC0D801F8EB07E048486D7E48486D7E00
0F8148486D7EA24848147FA2007F168090C8123FA34816C0AA6C16806D147FA2003F1600
A26C6C14FEA26C6C495A6C6C495A6C6C495A6C6C495A6C6C495A90263FC0FFC7FC90380F
FFFC010013C02A297CA833>79 D<B612E015FE6F7E3A03FC003FE0ED0FF06F7E6F7E1501
82A65E4B5A1507ED0FE0ED3FC090B500FEC7FCA29039FC00FF80ED3FC06F7E6F7E6F7EA9
170EA21503923801FC1CB538F000FEEE7FF8EE0FE02F297EA832>82
D<9038FF80600003EBF0E0000F13F8381F80FD383F001F003E1307481303A200FC1301A2
14007EA26C140013C0EA7FFCEBFFE06C13F86C13FE80000714806C14C0C6FC010F13E0EB
007FEC1FF0140F140700E01303A46C14E0A26C13076C14C0B4EB0F80EBE03F39E3FFFE00
00E15B38C01FF01C297CA825>I<B53CE07FFFE01FFFC0A32803FC0003FCC7EA7000A26D
6D7E000160A26D6E13016C604B138002801503017F5F4B13C0D93FC0013F49C7FCA2913A
E00E1FE00F011F160E17F09126F01C0F131E010F161C033C13F8902707F838075BA20378
13FC902703FC70035BA2913AFEE001FEF001015E02FF14FF4B7E6D5EA26E486D5AA36EC7
6CC8FCA2023E80021E141EA242297FA845>87 D<3803FF80000F13F0381F01FC383F80FE
147F801580EA1F00C7FCA4EB3FFF3801FC3FEA0FE0EA1F80EA3F00127E5AA4145F007E13
DF393F839FFC381FFE0F3803FC031E1B7E9A21>97 D<EAFFE0A3120FACEBE1FE9038EFFF
809038FE07E09038F803F09038F001F89038E000FCA2157EA2157FA8157EA315FCA29038
F001F89038F803F090389C0FE090380FFF80390E01FC00202A7EA925>I<EB3FF03801FF
FC3803F03E380FC07FEA1F80EA3F00A248133E007E90C7FCA212FEA7127EA2127F6CEB03
801380001FEB0700380FE00E3803F83C3801FFF838003FC0191B7E9A1E>I<EC7FF0A314
07ACEB3F873801FFF73807F03F380FC00F381F8007EA3F00A2127EA312FEA8127EA27EA2
381F800F380FC01F3907E07FFF3801FFE738007F87202A7EA925>I<EB3FC03801FFF038
03E07C380F803E001F7F130048EB0F80127E15C0A200FE1307A2B6FCA248C8FCA3127EA2
127F6CEB01C07E390F8003803907C007003803F01E3800FFFCEB3FE01A1B7E9A1F>I<EB
07F8EB3FFCEB7E3E3801FC7FEA03F813F01207143E1400A7B512C0A33807F000B3A3387F
FF80A3182A7EA915>I<9038FF80F00003EBE3F8390FC1FE1C391F007C7C48137E003EEB
3E10007EEB3F00A6003E133E003F137E6C137C380FC1F8380BFFE00018138090C8FC1238
A2123C383FFFF814FF6C14C06C14E06C14F0121F383C0007007CEB01F8481300A4007CEB
01F0A2003FEB07E0390FC01F806CB5120038007FF01E287E9A22>I<EAFFE0A3120FAC14
7E9038E1FF809038E30FC001E413E0EBE80701F813F013F0A213E0B039FFFE3FFFA3202A
7DA925>I<1207EA0F80EA1FC0EA3FE0A3EA1FC0EA0F80EA0700C7FCA7EAFFE0A3120FB3
A3EAFFFEA30F2B7EAA12>I<EAFFE0A3120FB3B2EAFFFEA30F2A7EA912>108
D<26FFC07FEB1FC0903AC1FFC07FF0903AC307E0C1F8D80FC49038F101FC9039C803F200
01D801FE7F01D05BA201E05BB03CFFFE3FFF8FFFE0A3331B7D9A38>I<38FFC07E9038C1
FF809038C30FC0D80FC413E0EBC80701D813F013D0A213E0B039FFFE3FFFA3201B7D9A25
>I<EB3FE03801FFFC3803F07E390FC01F80391F800FC0393F0007E0A2007EEB03F0A300
FE14F8A8007E14F0A26CEB07E0A2391F800FC0390FC01F803907F07F003801FFFC38003F
E01D1B7E9A22>I<38FFE1FE9038EFFF809038FE0FE0390FF803F09038F001F801E013FC
140015FEA2157FA8157E15FEA215FC140101F013F89038F807F09038FC0FE09038EFFF80
9038E1FC0001E0C7FCA9EAFFFEA320277E9A25>I<38FFC1F0EBC7FCEBC63E380FCC7F13
D813D0A2EBF03EEBE000B0B5FCA3181B7F9A1B>114 D<3803FE30380FFFF0EA3E03EA78
00127000F01370A27E00FE1300EAFFE06CB4FC14C06C13E06C13F0000713F8C6FCEB07FC
130000E0137C143C7E14387E6C137038FF01E038E7FFC000C11300161B7E9A1B>I<13E0
A41201A31203A21207120F381FFFE0B5FCA2380FE000AD1470A73807F0E0000313C03801
FF8038007F0014267FA51A>I<39FFE07FF0A3000F1307B2140FA2000713173903F067FF
3801FFC738007F87201B7D9A25>I<39FFFC03FFA3390FF000F0000714E07F0003EB01C0
A2EBFC0300011480EBFE070000140013FFEB7F0EA2149EEB3F9C14FC6D5AA26D5AA36D5A
A26D5AA25CA21307003890C7FCEA7C0FEAFE0E131E131C5BEA74F0EA3FE0EA0F8020277F
9A23>121 D E /Fo 45 123 df<1380EA010012025A120C120812185AA35AA412E0AA12
60A47EA37E1208120C12047E7EEA008009267D9B0F>40 D<7E12407E7E12181208120C7E
A37EA41380AA1300A41206A35A1208121812105A5A5A09267E9B0F>I<126012F0A21270
1210A31220A21240A2040B7D830B>44 D<EAFFC0A20A0280880D>I<126012F0A2126004
047D830B>I<EA07E0EA1C38EA381CEA300CEA700EEA6006A2EAE007AAEA6006A2EA700E
EA300CEA381CEA1C38EA07E010187F9713>48 D<12035AB4FC1207B3A2EA7FF80D187D97
13>I<EA0F80EA1060EA2030EA4038EA803CEAC01C12E01240EA003C1338A21370136013
C0EA018013001202EA040412081210EA3008EA3FF8127F12FF0E187E9713>I<EA07E0EA
1838EA201CEA601EEA700EEA201E1200131CA213381370EA07E0EA0038131C130E130FA2
12E0A212C0EA400EEA601CEA1838EA07E010187F9713>I<1318A21338137813F813B8EA
01381202A212041208121812101220124012C0B5FCEA0038A6EA03FF10187F9713>I<EA
3018EA3FF013E01380EA2000A5EA2FC0EA3060EA2030EA00381318131CA2124012E0A2EA
8018EA40381330EA30E0EA0F800E187E9713>I<EA01F8EA0704EA0C06EA180E12301300
1270126012E0EAE3E0EAE418EAE80CEAF00EEAE0061307A31260A2EA7006EA300EEA180C
EA0C38EA07E010187F9713>I<1240EA7FFF13FEA2EA4004EA80081310A2EA00201340A2
1380120113005AA25A1206A2120EA5120410197E9813>I<EA07E0EA1818EA300CEA2006
1260A21270EA780CEA3E18EA1F30EA07C0EA03E0EA0CF8EA307CEA601E130FEAC0071303
A3EA6002EA2004EA1818EA07E010187F9713>I<EA07E0EA1C30EA3018EA700CEA600EEA
E006A21307A31260EA700FEA3017EA1827EA07C7EA00071306130E130C12701318EA6030
EA3060EA0F8010187F9713>I<B512F8380E003814181408140C1404A3EB0100A35BEA0F
FFEA0E037FA390C7FCA8EAFFE0161A7F9919>70 D<EAFF80EA1C00B3A6EAFF80091A7E99
0E>73 D<B414FF000F14F0A2390B800170A23809C002A33808E004A2EB7008A3EB3810A3
EB1C20A2EB0E40A3EB0780A2EB0300121C39FF8307FF201A7F9923>77
D<137F3801C1C038070070000E7F487F003C131E0038130E0078130F00707F00F01480A8
0078EB0F00A20038130E003C131E001C131C6C5B6C5B3801C1C0D8007FC7FC191A7E991E
>79 D<EA0FC2EA1836EA200EEA600612C01302A3EAE0001270127EEA3FE0EA1FF8EA03FC
EA007E130E130713031280A3EAC0021306EAE004EAD818EA87E0101A7E9915>83
D<007FB5FC38701C0700401301A200C0148000801300A300001400B13803FFE0191A7F99
1C>I<EA1FC0EA38707FEA101C1200A2EA03FCEA1E1C1238127012E01480A2133CEA705F
381F8F0011107F8F13>97 D<12FC121CA913FCEA1D07381E0380381C01C0130014E0A6EB
01C01480381E0300EA1906EA10F8131A809915>I<EA07F8EA1C1C1238EA700813005AA6
12701304EA3808EA1C18EA07E00E107F8F11>I<133F1307A9EA03E7EA0C17EA180F487E
127012E0A6126012706C5AEA1C373807C7E0131A7F9915>I<EA07C0EA1C30EA30181270
EA600C12E0EAFFFCEAE000A41260EA7004EA3808EA1C18EA07E00E107F8F11>I<EA01F0
EA0718EA0E38EA1C101300A6EAFFC0EA1C00AEEAFF800D1A80990C>I<EA0FCF38187180
38303000EA7038A4EA30306C5AEA2FC00060C7FCA21270EA3FF013FC6C7EEA600FEAC003
A4EA6006EA381CEA07E011187F8F13>I<12FC121CA9137CEA1D87381E0380A2121CAB38
FF9FF0141A809915>I<1218123CA212181200A612FC121CAE12FF081A80990A>I<EA0180
EA03C0A2EA0180C7FCA6EA0FC01201B21241EAE180EAE300127E0A2182990C>I<12FC12
1CB3A6EAFF80091A80990A>108 D<38FC7C1F391D8E6380391E0781C0A2001C1301AB39
FF9FE7F81D107F8F20>I<EAFC7CEA1D87381E0380A2121CAB38FF9FF01410808F15>I<EA
07E0EA1C38EA300CEA700EEA6006EAE007A6EA6006EA700EEA381CEA1C38EA07E010107F
8F13>I<EAFCFCEA1D07381E0380381C01C0A2EB00E0A6EB01C01480381E0300EA1D06EA
1CF890C7FCA6B47E1317808F15>I<EAFC78EA1D9CEA1E1C1308EA1C00ABEAFF800E1080
8F0F>114 D<EA1F20EA60E0EA402012C0A2EAF000127FEA3FC0EA1FE0EA00F0EA807013
3012C01320EAF040EA8F800C107F8F0F>I<1208A41218A21238EAFFC0EA3800A81320A4
1218EA1C40EA07800B177F960F>I<38FC1F80EA1C03AB1307120CEA0E0B3803F3F01410
808F15>I<38FF0F80383C0700EA1C061304A26C5AA26C5AA3EA03A0A2EA01C0A36C5A11
107F8F14>I<39FE7F1F8039381C0700003C1306381C0C04130E380E16081317A2380723
10149013A33803C1A014E0380180C0A319107F8F1C>I<38FE3F80383C1E00EA1C086C5A
EA0F306C5A6C5A12017F1203EA0270487E1208EA181CEA381E38FC3FC012107F8F14>I<
38FF0F80383C0700EA1C061304A26C5AA26C5AA3EA03A0A2EA01C0A36C5AA248C7FCA212
E112E212E4127811177F8F14>I<EAFFF8EAE07012C0EA80E0EA81C0A2EA0380EA0700A2
EA0E04121CA2EA380812701338EAFFF80E107F8F11>I E /Fp 7
117 df<1303497EA2497EA3EB1BE0A2EB3BF01331A2EB60F8A2EBE0FCEBC07CA248487E
EBFFFE487FEB001F4814800006130FA248EB07C039FF803FFCA21E1A7F9921>65
D<EA1FF0EA383CEA7C1E7FA21238120013FFEA0FCFEA3E0F127C12F8A31317387C27E0EA
1FC313117F9015>97 D<12FCA2123CA713FE383F8780383E01C0003C13E0EB00F0A214F8
A514F0A2EB01E0003E13C0383B07803830FE00151A7E9919>I<EA03FCEA0F0EEA1C1F12
3C1278130E00F8C7FCA51278A2383C0180381C0300EA0F06EA03FC11117F9014>I<EAF8
F0EAF938EA3A7CA2123C13381300A9EAFF80A20E117E9012>114
D<EA1FD8EA2078EA401812C0A2EAF000EAFF80EA7FE0EA3FF0EA07F8EA003CEAC00CA212
E01308EAF830EACFE00E117F9011>I<1206A4120EA2121EEA3FF012FFEA1E00A81318A5
EA0F30EA03E00D187F9711>I E /Fq 82 124 df<EB7E1F3901C1B180390303E3C00007
13C3000EEBC180903801C000A6B512FC380E01C0B0387F87FC1A1D809C18>11
D<137E3801C180EA0301380703C0120EEB018090C7FCA5B512C0EA0E01B0387F87F8151D
809C17>I<EB7FC0EA01C1EA03031207EA0E01A7B5FCEA0E01B0387FCFF8151D809C17>I<
90383F07E03901C09C18380380F0D80701133C000E13E00100131892C7FCA5B612FC390E
00E01CB03A7FC7FCFF80211D809C23>I<120EA2121E1238127012E012800707779C15>
19 D<EA6060EAF0F0EAF8F8EA6868EA0808A3EA1010A2EA2020EA4040EA80800D0C7F9C
15>34 D<13E0EA0310EA0608A2120EA45BA25B6C5AEC3FE09038800F80EC060000031304
12073809C00800115BEA30E03820F020EA607038E03840EB3C80131C90380F00207F0070
EB8040383009C0391830E180390FC03F001B1F7E9D20>38 D<126012F012F812681208A3
1210A2122012401280050C7C9C0C>I<1380EA0100120212065AA25AA25AA35AA412E0AC
1260A47EA37EA27EA27E12027EEA0080092A7C9E10>I<7E12407E12307EA27EA27EA37E
A41380AC1300A41206A35AA25AA25A12205A5A092A7E9E10>I<1306ADB612E0A2D80006
C7FCAD1B1C7E9720>43 D<126012F0A212701210A41220A212401280040C7C830C>I<EA
FFE0A20B0280890E>I<126012F0A2126004047C830C>I<EA03C0EA0C30EA1818EA300CA2
EA700EEA6006A2EAE007ADEA6006A2EA700EEA300CA2EA1818EA0C30EA07E0101D7E9B15
>48 D<5A1207123F12C71207B3A5EAFFF80D1C7C9B15>I<EA07C0EA1830EA201CEA400C
130EEAF00F12F81307A21270EA000F130EA2131CA213381370136013C0EA0180EA0300EA
0601120C1218EA1002EA3FFE127F12FF101C7E9B15>I<EA07E0EA1830EA201CA2EA781E
130E131E1238EA001CA2131813301360EA07C0EA0030131CA2130E130FA2127012F8A3EA
F00EEA401C1220EA1830EA07C0101D7E9B15>I<130CA2131C133CA2135C13DC139CEA01
1C120312021204120C1208121012301220124012C0B512C038001C00A73801FFC0121C7F
9B15>I<EA300CEA3FF813F013C0EA2000A6EA23E0EA2C30EA3018131CEA200E1200130F
A3126012F0A3EA800EEA401E131CEA2038EA1870EA07C0101D7E9B15>I<13F0EA030CEA
0404EA0C0EEA181E1230130CEA7000A21260EAE3E0EAE430EAE818EAF00C130EEAE00613
07A51260A2EA7006EA300E130CEA1818EA0C30EA03E0101D7E9B15>I<1240387FFF8014
00A2EA4002485AA25B485AA25B1360134013C0A212015BA21203A41207A66CC7FC111D7E
9B15>I<EA03E0EA0C30EA1008EA200C13061260A21270A2EA7C0CEA3E18EA3FB0EA1FE0
EA07F013F8EA18FCEA307EEA601E130FEAC0071303A4EA60021304EA300CEA1C10EA07E0
101D7E9B15>I<EA03C0EA0C30EA1818EA300C1270EA600EEAE006A21307A51260EA700F
1230EA1817EA0C27EA07C7EA0006A2130EEA300C127813181270EA2030EA10C0EA0F8010
1D7E9B15>I<126012F0A212601200AA126012F0A2126004127C910C>I<126012F0A21260
1200AA126012F0A212701210A41220A212401280041A7C910C>I<007FB512C0B612E0C9
FCA8B612E06C14C01B0C7E8F20>61 D<EA0FE0EA3038EA401CEAE00E12F0A3EA000C131C
1330136013C0138012011300A6C7FCA51203EA0780A2EA03000F1D7E9C14>63
D<1306A3130FA3EB1780A2EB37C01323A2EB43E01341A2EB80F0A338010078A2EBFFF838
02003CA3487FA2000C131F80001E5BB4EBFFF01C1D7F9C1F>65 D<B512C0380F00788080
140E140FA4140E141E5C14F8EBFFF0EB003C8080801580A5EC0F00A2141E1478B512E019
1C7F9B1D>I<90381F8080EBE0613801801938070007000E13035A14015A00781300A212
7000F01400A8007014801278A212386CEB0100A26C13026C5B380180083800E030EB1FC0
191E7E9C1E>I<B512C0380F00F0143C140E80A2EC038015C01401A215E0A815C0A21403
158014071500140E5C1470B512C01B1C7E9B20>I<B512FC380F003C140C1404A2140614
02A213011400A35B13FF13037FA3140113001402A31406A2140C143CB512FC181C7E9B1C
>I<B512F8380F007814181408A2140C1404A213011400A35B13FF13037FA490C7FCA8EA
FFF8161C7E9B1B>I<90381F8080EBE0613801801938070007000E13035A14015A007813
00A2127000F01400A6ECFFF0EC0F80007013071278A212387EA27E6C130B380180113800
E06090381F80001C1E7E9C21>I<39FFF0FFF0390F000F00AC90B5FCEB000FAD39FFF0FF
F01C1C7F9B1F>I<EAFFF0EA0F00B3A8EAFFF00C1C7F9B0F>I<3807FF8038007C00133CB3
127012F8A21338EA7078EA4070EA30E0EA0F80111D7F9B15>I<39FFF01FE0390F000780
EC060014045C5C5C5C5C49C7FC13021306130FEB17801327EB43C0EB81E013016D7E1478
A280143E141E80158015C039FFF03FF01C1C7F9B20>I<EAFFF8EA0F8090C7FCB01408A3
1418A2141014301470EB01F0B5FC151C7E9B1A>I<B46CEBFF80000FECF800A2390BC001
78A33809E002A23808F004A3EB7808A3EB3C10A3EB1E20A3EB0F40A2EB0780A3EB030012
1C3AFF8307FF80211C7E9B26>I<B4EB1FF0390F8003809038C00100120BEA09E0EA08F0
A21378133C133E131E130F14811307EB03C1EB01E114F113001479147D143D141FA28080
80121CB46C7E1C1C7F9B1F>I<EB3F80EBE0E03803803848487E000E7F487F003C148000
381303007814C0A20070130100F014E0A8007014C000781303A200381480003C1307001C
14006C130E6C5B6C6C5A3800E0E0EB3F801B1E7E9C20>I<B51280380F00E01478143C14
1C141EA5141C143C147814E0EBFF8090C7FCACEAFFF0171C7E9B1C>I<EB3F80EBE0E038
03803848487E000E7F487F003C148000381303007814C0A20070130100F014E0A8007014
C000781303A200381480383C0E07D81C111300380E208E0007135C3803A0783900F0E020
133FEB0060EC3060EC38E0EC3FC0A2EC1F80EC0F001B257E9C20>I<B5FC380F01E0EB00
7880141C141EA4141C143C5CEB01E001FFC7FCEB01E0EB0070147880A61510A2141CA239
FFF00E20C7EA03C01C1D7E9B1F>I<3807E080EA1C19EA30051303EA600112E01300A36C
13007E127CEA7FC0EA3FF8EA1FFEEA07FFC61380130FEB07C0130313011280A300C01380
A238E00300EAD002EACC0CEA83F8121E7E9C17>I<007FB512C038700F01006013000040
1440A200C014201280A300001400B1497E3803FFFC1B1C7F9B1E>I<39FFF01FF0390F00
0380EC0100B3A26C1302138000035BEA01C03800E018EB7060EB0F801C1D7F9B1F>I<39
FFE00FF0391F0003C0EC01806C1400A238078002A213C000035BA2EBE00C00011308A26C
6C5AA213F8EB7820A26D5AA36D5AA2131F6DC7FCA21306A31C1D7F9B1F>I<3AFFE1FFC0
FF3A1F003E003C001E013C13186C6D1310A32607801F1320A33A03C0278040A33A01E043
C080A33A00F081E100A39038F900F3017913F2A2017E137E013E137CA2013C133C011C13
38A20118131801081310281D7F9B2B>I<39FFF003FC390F8001E00007EB00C06D138000
03EB01006D5A000113026C6C5A13F8EB7808EB7C18EB3C10EB3E20131F6D5A14C06D5AAB
EB7FF81E1C809B1F>89 D<12FEA212C0B3B312FEA207297C9E0C>91
D<EA0808EA1010EA2020EA4040A2EA8080A3EAB0B0EAF8F8EA7878EA30300D0C7A9C15>
I<12FEA21206B3B312FEA20729809E0C>I<EA1FC0EA3070EA78387F12301200A2EA01FC
EA0F1C12381270126000E01340A3EA603C38304E80381F870012127E9115>97
D<12FC121CAA137CEA1D87381E0180381C00C014E014601470A6146014E014C0381E0180
38190700EA10FC141D7F9C17>I<EA03F8EA0C0CEA181E1230EA700CEA600012E0A61260
EA70021230EA1804EA0C18EA03E00F127F9112>I<EB1F801303AAEA03F3EA0E0BEA1807
EA30031270126012E0A6126012701230EA1807EA0E1B3803E3F0141D7F9C17>I<EA07E0
EA0C30EA1818EA300CEA700EEA600612E0EAFFFEEAE000A41260EA70021230EA1804EA0C
18EA03E00F127F9112>I<13F8EA018CEA071E1206EA0E0C1300A6EAFFE0EA0E00B0EA7F
E00F1D809C0D>I<EB03803807C4C0EA1C783838388038301800EA701CA4EA3018EA3838
6C5AEA27C00020C7FCA21230EA3FF86CB4FC1480EA2003386001C0EAC000A33860018038
300300EA1C0EEA07F8121C7F9215>I<12FC121CAA137C1387EA1D03001E1380121CAD38
FF9FF0141D7F9C17>I<1218123CA21218C7FCA712FC121CB0EAFF80091D7F9C0C>I<13C0
EA01E0A2EA00C01300A7EA07E01200B3A21260EAF0C012F1EA6180EA3E000B25839C0D>
I<12FC121CAAEB0FE0EB0780EB06005B13105B5B13E0121DEA1E70EA1C781338133C131C
7F130F148038FF9FE0131D7F9C16>I<12FC121CB3A9EAFF80091D7F9C0C>I<39FC7E07E0
391C838838391D019018001EEBE01C001C13C0AD3AFF8FF8FF8021127F9124>I<EAFC7C
EA1C87EA1D03001E1380121CAD38FF9FF014127F9117>I<EA03F0EA0E1CEA1806487E00
701380EA600100E013C0A600601380EA700300301300EA1806EA0E1CEA03F012127F9115
>I<EAFC7CEA1D87381E0180001C13C0EB00E0A21470A614E0A2EB01C0001E1380381D07
00EA1CFC90C7FCA7B47E141A7F9117>I<3803E080EA0E19EA1805EA3807EA7003A212E0
A61270A2EA38071218EA0E1BEA03E3EA0003A7EB1FF0141A7F9116>I<EAFCE0EA1D38EA
1E78A2EA1C301300ACEAFFC00D127F9110>I<EA1F90EA2070EA4030EAC010A212E0EAF8
00EA7F80EA3FE0EA0FF0EA00F8EA8038131812C0A2EAE010EAD060EA8FC00D127F9110>
I<1204A4120CA2121C123CEAFFE0EA1C00A91310A5120CEA0E20EA03C00C1A7F9910>I<
38FC1F80EA1C03AD1307120CEA0E1B3803E3F014127F9117>I<38FF07E0383C0380381C
0100A2EA0E02A2EA0F06EA0704A2EA0388A213C8EA01D0A2EA00E0A3134013127F9116>
I<39FF3FC7E0393C0703C0001CEB01801500130B000E1382A21311000713C4A213203803
A0E8A2EBC06800011370A2EB8030000013201B127F911E>I<38FF0FE0381E0700EA1C06
EA0E046C5AEA039013B0EA01E012007F12011338EA021C1204EA0C0E487E003C138038FE
1FF014127F9116>I<38FF07E0383C0380381C0100A2EA0E02A2EA0F06EA0704A2EA0388
A213C8EA01D0A2EA00E0A31340A25BA212F000F1C7FC12F312661238131A7F9116>I<EA
7FFCEA70381260EA407013F013E0EA41C012031380EA0700EA0F04120E121CEA3C0CEA38
0812701338EAFFF80E127F9112>I<B512F01401808B15>I E /Fr
6 81 df<B512F0A214027D881B>0 D<1202A3EAC218EAF278EA3AE0EA0F80A2EA3AE0EA
F278EAC218EA0200A30D0E7E8E12>3 D<1406A380A2EC0180EC00C01560B612FCA2C812
6015C0EC0180EC0300A21406A31E127E9023>33 D<390F8007C03919E01C203920303010
394018400839C00C8004EA80071400EB03801307903804C00C3940086008392030301039
10E01E60390F8007C01E0E7E8D23>49 D<3801FF801207000EC7FC12185A5AA35AA2B512
80A200C0C7FCA21260A37E7E120E3807FF80120111167D9218>I<3801FFE0000F13F838
18E0FC0020133E0060131E00C0130E1200140C13C01418000113101420EB8040EB818038
03BE00137890C7FC5A1206A2120E120CA25A17187F9619>80 D E
/Fs 41 123 df<EA03C01207120FA2EA1F80EA3E005A12F012600A0975A21C>19
D<EAFFFCA40E047F8C13>45 D<1238127C12FEA3127C123807077C8610>I<13181378EA
01F812FFA21201B3A7387FFFE0A213207C9F1C>49 D<EA03FCEA0FFF383C1FC0387007E0
007C13F0EAFE0314F8A21301127CEA3803120014F0A2EB07E014C0EB0F80EB1F00133E13
385BEBE018EA01C0EA0380EA0700000E1338380FFFF05A5A5AB5FCA215207D9F1C>I<13
FE3807FFC0380F07E0381E03F0123FEB81F8A3EA1F0314F0120014E0EB07C0EB1F803801
FE007F380007C0EB01F014F8EB00FCA2003C13FE127EB4FCA314FCEA7E01007813F8381E
07F0380FFFC03801FE0017207E9F1C>I<14E013011303A21307130F131FA21337137713
E7EA01C71387EA03071207120E120C12181238127012E0B6FCA2380007E0A790B5FCA218
207E9F1C>I<B67E15F03907F001F86E7E157EA2157FA5157E15FE5DEC03F890B55AA290
38F001FCEC007E811680151F16C0A6ED3F80A2ED7F00EC01FEB612F815C022227EA128>
66 D<D903FE138090381FFF819038FF01E33901F8003FD803E0131F4848130F48481307
121F48C71203A2481401127EA200FE91C7FCA8127EED0180127F7E15036C6C1400120F6C
6C1306D803F05B6C6C13386CB413F090381FFFC0D903FEC7FC21227DA128>I<B67E15F0
3907F003FCEC007E81ED1F80ED0FC0ED07E0A216F01503A316F8A916F0A3ED07E0A2ED0F
C0ED1F80ED3F00157EEC03FCB612F0158025227EA12B>I<B612FCA23807F000153C151C
150C150EA21506140CA31500141C143CEBFFFCA2EBF03C141C140CA21503A214001506A3
150EA2151E153EEC01FCB6FCA220227EA125>I<D903FE134090391FFFC0C090387F00F1
D801F8133F4848130FD807C01307000F1403485A48C71201A2481400127EA200FE1500A7
91380FFFFC127E007F9038001FC0A27EA26C7E6C7E6C7E6C7ED801FC133F39007F80E790
381FFFC30103130026227DA12C>71 D<B53883FFFEA23A07F0001FC0AD90B6FCA29038F0
001FAFB53883FFFEA227227EA12C>I<B51280A23807F000B3ACB51280A211227EA115>I<
D8FFF0EC0FFF6D5C000716E0D806FC1437A3017E1467A26D14C7A290391F800187A29039
0FC00307A3903807E006A2903803F00CA2903801F818A3903800FC30A2EC7E60A2EC3FC0
A2EC1F80A3EC0F00D8FFF091B5FC140630227EA135>77 D<D8FFF8EB1FFE7F0007EC00C0
7FEA06FF6D7E6D7E6D7E130F806D7E6D7E6D7E130080EC7F80EC3FC0EC1FE0EC0FF01407
15F8EC03FCEC01FEEC00FF157FA2153F151F150F15071503A2D8FFF01301150027227EA1
2C>I<B512FEECFFC03907F007F0EC01F86E7E157E157FA6157E5D4A5AEC07F090B512C0
5D9038F00FE06E7E6E7E6E7EA81606EC00FEEDFF0CB538803FF8ED0FF027227EA12A>82
D<3801FE023807FF86381F01FE383C007E007C131E0078130EA200F81306A27E1400B4FC
13E06CB4FC14C06C13F06C13F86C13FC000313FEEA003F1303EB007F143FA200C0131FA3
6C131EA26C133C12FCB413F838C7FFE00080138018227DA11F>I<EA0FFC383FFF80387E
07C0EB03E0130114F0123C1200A2133FEA03FDEA1FC1EA3F01127E12FCA4EA7E02EB0CF8
381FF87F3807E03F18167E951B>97 D<B4FCA2121FABEB0FE0EB3FF8EBE07CEB803E497E
EC0F80A215C0A81580141F01801300EBC03E381EE07C381C3FF838180FC01A237EA21F>
I<EBFF80000713E0380F83F0EA1F03123E127E387C01E090C7FC12FCA6127C127EA2003E
13186C1330380FC0603807FFC0C6130015167E9519>I<EB01FEA2EB003EABEA01FC3807
FFBE380F81FE381F007E003E133E127E127C12FCA8127CA26C137E6C13FE380F83BE3907
FF3FC0EA01FC1A237EA21F>I<13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F8
12FCA2B5FCA200FCC7FCA3127CA2127E003E13186C1330380FC0703803FFC0C613001516
7E951A>I<EB1FC0EB7FE0EBF1F0EA01E31203EA07C3EBC1E0EBC000A6EAFFFEA2EA07C0
B2EA3FFCA2142380A211>I<3801FE0F3907FFBF80380F87C7381F03E7391E01E000003E
7FA5001E5BEA1F03380F87C0EBFF80D809FEC7FC0018C8FCA2121C381FFFE06C13F86C13
FE001F7F383C003F48EB0F80481307A40078EB0F006C131E001F137C6CB45A000113C019
217F951C>I<B4FCA2121FABEB07E0EB1FF8EB307CEB403CEB803EA21300AE39FFE1FFC0
A21A237EA21F>I<121C123E127FA3123E121CC7FCA7B4FCA2121FB2EAFFE0A20B247EA3
10>I<B4FCA2121FABECFF80A2EC38001460495A495A49C7FC130E5B137E13FF13CFEB0F
806D7E6D7E1301806D7E147C143C39FFE0FFC0A21A237EA21E>107
D<B4FCA2121FB3ADEAFFE0A20B237EA210>I<3AFF07F007F090391FFC1FFC3A1F303E30
3E01401340496C487EA201001300AE3BFFE0FFE0FFE0A22B167E9530>I<38FF07E0EB1F
F8381F307CEB403CEB803EA21300AE39FFE1FFC0A21A167E951F>I<13FE3807FFC0380F
83E0381E00F0003E13F848137CA300FC137EA7007C137CA26C13F8381F01F0380F83E038
07FFC03800FE0017167E951C>I<38FF0FE0EB3FF8381FE07CEB803E497E1580A2EC0FC0
A8EC1F80A29038803F00EBC03EEBE0FCEB3FF8EB0FC090C8FCA8EAFFE0A21A207E951F>
I<EAFE1FEB3FC0381E67E013C71387A2381F83C090C7FCADEAFFF0A213167E9517>114
D<EA0FF3EA3FFFEA781FEA6007EAE003A212F000FCC7FCEA7FE013F8EA3FFEEA0FFF1201
38000F80EAC007130312E0A238F00700EAFC0EEAEFFCEAC7F011167E9516>I<487EA412
03A21207A2120F123FB5FCA2EA0F80ABEB8180A5EB8300EA07C3EA03FEEA00F811207F9F
16>I<38FF01FEA2381F003EAF147E14FE380F81BE3907FF3FC0EA01FC1A167E951F>I<3A
FFE3FF07F8A23A1F007800C09038807C01000F1580A23A07C07E030014DE5D3903E1DF06
148FD801F1138CEBF307A2D800FF13D8EBFE0315F890387C01F0A2013C5BEB3800A22516
7F9528>119 D<39FFE07FC0A2390F801C006C6C5A6C6C5AEBF0606C6C5A3800F980137F
6DC7FC7F80497E1337EB63E0EBC1F03801C0F848487E3807007E000E133E39FF80FFE0A2
1B167F951E>I<39FFE01FE0A2391F800700000F1306EBC00E0007130C13E000035BA26C
6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA2130CA25B1278EAFC3813305BEA
69C0EA7F80001FC8FC1B207F951E>I<387FFFF0A2387C03E0387007C0EA600F38E01F80
00C01300133E137EC65A5B485A00031330EA07E013C0380F8070121F383F0060003E13E0
EA7C03B5FCA214167E9519>I E /Ft 23 123 df<B512F8A715077F921B>45
D<B812E0A3C6903880007FEE0FF016031601A21600A21770A31738A21507A21700A35D5D
5D91B5FCA3EC803F818181A592C8FCACB612C0A32D317EB033>70
D<DA03FF1303027FEBF00749B5EAFC0F01079038007E1FD91FF0EB0FBFD97FC0EB03FF49
487F4848C87E485A0007824848815B001F82A2484881A2127FA24992C7FC12FFAA0307B5
12F8127F7FDB00011300123FA26C7EA2120F7F6C7E12036C7E6C6C7E6D6C5BD91FF8497E
D907FFEB3E3F01019038FFFC1F6D6CEBF00F0203EB800335317CB03F>I<B500C00303B5
FCA26E5DC61900D9EFF0150EA3D9E7F85DA2D9E3FC5DA2D9E1FE5DA2D9E0FF5DA26E6C49
5AA26E6C495AA36E6C495AA26E6C130EA26E6C5BA26E6C5BA26E6C5BA26E6C5BA392387F
81C0A292383FC380A2DB1FE7C7FCA2ED0FFEA26F5AA36F5A487EB526E001F090B6FCA26F
5A48317EB04D>77 D<90391FF8018090B51203000314C73907F007EF390F8000FF48C712
7F003E141F150F5A150712FCA215037EA26C91C7FC13C0EA7FF0EBFF806C13F8ECFF806C
14F06C806C806C14FFC6FC013F1480010114C0D9001F13E01401EC003FED1FF0150F1507
126000E01403A316E07EA26CEC07C07EB4EC0F8001C0EB1F00D8FBFC13FE00F1B512F8D8
E03F5BD8C003138024317CB02D>83 D<EBFFF0000313FF390F803F809038C00FE0486C6C
7EA26E7ED80FC07FEA0780C7FCA414FF131FEBFFE33803FC03EA0FF0EA1FC0123FEA7F80
A2EAFF00A31407A2387F800D393FC01DFE3A1FE078FFF03907FFE07FC6EB803F24207E9F
27>97 D<EA01F812FFA3120F1207ADEC3FE0ECFFFC9038FBE07F9039FF001F8049EB0FC0
4914E049EB07F016F8A2ED03FCA316FEA816FCA3ED07F8A216F06DEB0FE06D14C001E7EB
3F809039C3C0FE00903880FFF89038003FC027327EB12D>I<EB0FFF017F13C03901FC01
F03803F0033907E007F8120FEA1FC0003FEB03F0EC01E04848C7FCA312FFA8127FA36C6C
131CA2001F14386C7E000714703903F001E03901FC07C039007FFF00EB0FF81E207D9F24
>I<EB0FFC90387FFF803901FC0FC03903F003E03907E001F0000F14F8391FC000FC003F
14FEA24848137E157FA212FFA290B6FCA20180C7FCA4127FA36C6C1307121F150E6C7E6C
6C131C6C6C13783900FE03E090383FFFC0903807FE0020207E9F25>101
D<EB01FE90380FFF8090381FC3C090387F07E09038FE0FF0120113FC1203EC07E0EC0180
91C7FCA8B512FCA3D803FCC7FCB3A8387FFFF0A31C327EB119>I<90391FF007C09039FF
FE3FE03A01F83F79F03907E00FC3000F14E19039C007E0E0001FECF000A2003F80A5001F
5CA2000F5CEBE00F00075C2603F83FC7FC3806FFFE380E1FF090C9FC121EA2121F7F90B5
7E6C14F015FC6C806C801680000F15C0003FC7127F007EEC1FE0007C140F00FC1407A400
7EEC0FC0003E1580003F141FD80FC0EB7E003907F803FC0001B512F0D8001F90C7FC242F
7E9F28>I<EA01F812FFA3120F1207ADEC07F8EC3FFEEC783F02C013809039F9801FC0EB
FB0001FE14E05BA35BB3B500C3B5FCA328327DB12D>I<EA03C0487E487E487EA46C5A6C
5A6C5AC8FCA9EA01F8127FA31207B3A7B51280A311337DB217>I<EA01F812FFA3120F12
07B3B3A6B512C0A312327DB117>108 D<3903F007F800FFEB3FFEEC783F02C013803A0F
F1801FC03807F30001F614E013FCA35BB3B500C3B5FCA328207D9F2D>110
D<EB07FC90387FFFC03901FC07F03903F001F848486C7E4848137E001F147F003F158049
133F007F15C0A300FF15E0A8007F15C0A36C6CEB7F80A2001F15006C6C13FE00075C3903
F803F83901FE0FF039007FFFC0D907FCC7FC23207E9F28>I<3901F83FE000FFEBFFFC90
38FBE07F9039FF003F80D807FEEB1FC049EB0FE04914F0ED07F8A216FC1503A216FEA816
FC1507A216F8A2ED0FF06D14E06DEB1FC06DEB3F809039FBC0FE009038F8FFF8EC3FC091
C8FCABB512C0A3272E7E9F2D>I<3803F03F00FFEB7FC09038F1C3E01487390FF30FF0EA
07F6A29038FC07E0EC03C091C7FCA25BB2B512E0A31C207E9F21>114
D<3801FF86000713FEEA1F00003C133E48131E140E12F8A36C90C7FCB47E13FC387FFFC0
6C13F0806C7F00077F00017FEA003F01001380143F0060131F00E0130FA27E15007E6C13
1E6C131C38FF807838F3FFF038C07F8019207D9F20>I<131CA5133CA3137CA213FC1201
12031207381FFFFEB5FCA2D803FCC7FCB0EC0380A71201EC0700EA00FEEB7F0EEB3FFCEB
07F0192E7FAD1F>I<D801F8EB07E000FFEB03FFA3000FEB003F0007141FB3153FA20003
147FA26C6CEBDFF03A00FE039FFF90387FFF1FEB0FFC28207D9F2D>I<B5EB1FFCA3D80F
F8EB03C0000715806D1307000315007F0001140E7F6C5CA2EC803C017F1338ECC078013F
1370ECE0F0011F5B14F1010F5B14F9903807FB80A214FF6D90C7FCA26D5AA26D5AA21478
A21470A214F05C1301007C5BEAFE035C49C8FC5BEAFC1EEA787CEA3FF0EA0FC0262E7E9F
2B>121 D<003FB512F8A29038800FF0393E001FE0003C133F003814C00078EB7F8014FF
D8700113005C1303495A00005B130F495A5C495A137F9038FF801C14005A485A5B000714
3C485A49133848481378003F14F8EBC001387F8007B6FCA21E207E9F24>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 62 152 a Ft(Graph)27 b(Matc)n(hing)g(b)n(y)f(Self-organizing)f
(F)-7 b(eature)27 b(Maps)697 272 y Fs(St)o(\023)-27 b(ephane)18
b(HERBIN)1183 254 y Fr(\003)603 390 y Fq(Ecole)c(Normale)f(Sup)o(\023)
-20 b(erieure)15 b(de)f(Cac)o(han)476 439 y(Cen)o(tre)h(de)f(Math)o
(\023)-20 b(ematiques)13 b(et)i(de)f(Leurs)h(Applications)808
489 y(Group)q(e)f(DIAM)775 539 y(CNRS,)f(URA)h(1611)710
589 y(61,)f(Av.)18 b(Pr)o(\023)-20 b(esiden)o(t)15 b(Wilson)678
639 y(94235)e(Cac)o(han)g(Cedex,)i(F)m(rance)856 772
y Fp(Abstract)98 838 y Fo(Man)o(y)i(problems)i(in)e(pattern)h
(recognition)h(can)f(b)q(e)f(form)o(ulated)h(as)f(searc)o(hing)h(a)f
(corresp)q(ondence)i(b)q(et)o(w)o(een)f(t)o(w)o(o)40
883 y(graphs.)f(The)10 b(exact)g(solution)j(is)d(often)g(limited)i(b)o
(y)f(a)f(com)o(binatorial)j(explosion,)g(and)e(sub)q(optimal)h
(iterativ)o(e)g(algorithms)40 929 y(ma)o(y)19 b(giv)o(e)h(go)q(o)q(d)g
(appro)o(ximations.)38 b(This)19 b(pap)q(er)h(prop)q(oses)g(an)g
(application)i(of)d(the)g(self-organizing)j(feature)d(map)40
975 y(\(SOFM\))e(algorithm)h(to)f(graph)g(mapping)i(and)e(giv)o(es)g(a)
g(set)f(of)h(measures)g(able)h(to)e(c)o(haracterize)i(the)f(neigh)o(b)q
(orho)q(o)q(d)40 1020 y(preserv)n(ation)d(ratio)g(of)e(the)h(resulting)
h(corresp)q(ondence.)19 b(The)13 b(role)g(of)f(graphs)i(as)f(a)f
(represen)o(tational)k(ob)r(ject)c(in)i(neural)40 1066
y(mo)q(delling)i(is)e(discussed.)-64 1195 y Fn(1)67 b(Graph)23
b(matc)n(hing)-64 1276 y Fs(1.1)56 b(Corresp)r(ondence)18
b(b)r(et)n(w)n(een)g(graphs)-64 1335 y Fq(Graph)f(is)f(a)h(useful)g
(data)f(structure)j(able)d(to)h(represen)o(t)i(relational)c
(information)f(b)q(et)o(w)o(een)k(en)o(tities.)28 b(It)16
b(is)h(de\014ned)h(b)o(y)e(a)-64 1385 y(set)h(of)e(v)o(ertices)i
Fm(V)26 b Fq(and)15 b(a)h(set)g(of)g(edges)g Fm(E)i Fq(b)q(et)o(w)o
(een)g(v)o(ertices.)25 b(The)16 b(stucture)i(of)d(a)g(graph)h
Fm(G)e Fq(=)h(\()p Fm(V)r(;)7 b(E)r Fq(\))17 b(is)e(c)o(haracterized)
-64 1435 y(globally)e(b)o(y)h(an)h Fl(adjac)n(ency)h
Fq(matrix)d Fm(A)p Fq(\()p Fm(G)p Fq(\),)h(where)i(a)f(non)f(zero)i
(elemen)o(t)e(at)h(the)g Fm(i)p Fq(-th)h(line)e(and)h
Fm(j)r Fq(-th)g(column)e(means)h(that)-64 1484 y(v)o(ertices)i
Fm(i)f Fq(and)g Fm(j)i Fq(are)f(someho)o(w)d(related.)22
b(W)m(e)14 b(will)f(sta)o(y)i(in)f(the)i(framew)o(ork)d(of)h
(undirected)j(graphs,)d(whic)o(h)h(implies)e(that)-64
1534 y Fm(A)p Fq(\()p Fm(G)p Fq(\))h(is)g(symmetric.)-2
1584 y(Man)o(y)c(problems,)f(esp)q(ecially)g(in)h(pattern)g
(recognition)f(and)h(computer)f(vision,)g(can)h(b)q(e)g(form)o(ulated)e
(as)i(a)f(corresp)q(ondence)-64 1634 y(b)q(et)o(w)o(een)14
b(t)o(w)o(o)f(graphs.)18 b(De\014ne)13 b(a)g Fl(matching)g
Fq(to)g(b)q(e)g(a)g(bipartite)g(graph)f(b)q(et)o(w)o(een)j(t)o(w)o(o)d
(sets)i(of)e(v)o(ertices)j Fm(V)22 b Fq(and)13 b Fm(V)1758
1619 y Fk(0)1782 1634 y Fq(from)f(t)o(w)o(o)-64 1684
y(graphs)i Fm(G)g Fq(and)g Fm(G)231 1669 y Fk(0)242 1684
y Fq(.)k(The)c(adjacency)h(matrix)d(of)h(the)h(resulting)g(global)f
(graph)g(has)h(the)h(form)694 1739 y Fj(\022)778 1772
y Fm(A)p Fq(\()p Fm(G)p Fq(\))74 b Fm(B)981 1757 y Fi(T)1008
1772 y Fq(\()p Fm(G;)7 b(G)1109 1757 y Fk(0)1119 1772
y Fq(\))745 1822 y Fm(B)r Fq(\()p Fm(G;)g(G)879 1807
y Fk(0)890 1822 y Fq(\))82 b Fm(A)p Fq(\()p Fm(G)1068
1807 y Fk(0)1079 1822 y Fq(\))1156 1739 y Fj(\023)-64
1914 y Fq(where)15 b Fm(B)r Fq(\()p Fm(G;)7 b(G)190 1899
y Fk(0)201 1914 y Fq(\))14 b(is)g(the)g(adjacency)m(,)g(p)q(ossibly)f
(real)h(v)n(alued)g(and)f(not)h(square,)g(matrix)e(of)h(the)i
(bipartite)f(graph.)j(Finding)c(a)-64 1964 y(matc)o(hing)f(b)q(et)o(w)o
(een)k(t)o(w)o(o)d(graphs)h(is)g(equiv)n(alen)o(t)f(to)h(\014nding)f(a)
h(matrix)e Fm(B)k Fq(sub)r(ject)f(to)f(some)f(constrain)o(ts.)-2
2014 y(A)e(sp)q(ecial)f(case)i(of)e(matc)o(hing)e(is)i(a)g
Fl(mapping)p Fq(,)h(whic)o(h)g(is)f(a)g(one)g(to)h(one)f(corresp)q
(ondence)k(b)q(et)o(w)o(een)d(v)o(ertices.)18 b(The)11
b(elemen)o(ts)-64 2063 y(of)i(the)i Fm(B)h Fq(matrix,)c(then,)i(con)o
(tain)f(only)h(one)g(non)f(zero)i(v)n(alue)e(p)q(er)i(column.)-2
2113 y(Man)o(y)k(in)o(teresting)g(com)o(binatorial)c(problems)j(in)g
(graphs)h(\(i.e.)31 b(deciding)19 b(whether)h(one)e(graph)h(con)o
(tains)f(a)h(sp)q(eci\014c)-64 2163 y(subgraph,)e(\014nding)f(the)h
(maxim)o(al)c(complete)j(subgraph\))h(are)g Fm(N)5 b(P)h
Fq(-complete.)24 b(The)17 b(problem)e(of)g(deciding)i(whether)h(t)o(w)o
(o)-64 2213 y(graphs)d(are)f(isomorphic)f(is)h(not)g(pro)o(v)o(ed)h(to)
f(b)q(e)h Fm(N)5 b(P)h Fq(-complete)13 b(but)h(is,)g(ho)o(w)o(ev)o(er,)
g(conjectured)i(to)f(b)q(e)g Fm(N)5 b(P)19 b Fq([5)o(].)g(This)14
b(issue)-64 2263 y(leads)e(to)g(the)h(idea)e(that)h(an)g(iterativ)o(e,)
g(p)q(ossibly)f(sub)q(optimal,)f(algorithm)g(ma)o(y)g(b)q(e)i(useful)g
(in)g(suc)o(h)g(optimization)d(problems.)-64 2312 y(The)18
b(algorithm)d(presen)o(ted)k(in)e(this)h(pap)q(er)g(is)f(designed)h(to)
f(\014nd)h(a)f(mapping)e(whic)o(h)i(preserv)o(es)j(globally)15
b(neigh)o(b)q(orho)q(o)q(d)-64 2362 y(relationship)h(b)q(et)o(w)o(een)h
(v)o(ertices.)26 b(The)16 b(optimization)d(space)k(is)f(the)h(set)f(of)
g(real)g(v)n(alued)f Fm(B)k Fq(matrices)c(b)q(et)o(w)o(een)i(graphs)g
(in)-64 2412 y(whic)o(h)d(the)g(mapping)e(will)h(b)q(e)h(em)o(b)q
(edded.)-64 2528 y Fs(1.2)56 b(Characterization)18 b(of)h(mappings)-64
2587 y Fq(This)d(section)g(in)o(tro)q(duces)g(the)g(concept)h(of)e
Fl(c)n(ontinuity)h Fq(of)f(mapping)e(b)q(et)o(w)o(een)k(t)o(w)o(o)e
(graphs)h(of)e(an)o(y)h(kind)g(and)h(prop)q(oses)g(a)-64
2637 y(set)f(of)e(measures)h(to)g(c)o(haracterize)i(it.)p
-64 2663 573 2 v -18 2690 a Fh(\003)0 2702 y Fg(email:)f(herbin@diam1)o
(.en)o(s-ca)o(c)o(ha)o(n.fr)o(.)g(P)o(art)c(of)h(this)f(w)o(ork)h(w)o
(as)h(conducted)c(while)j(the)f(author)g(w)o(as)h(at)g(Bec)o(kman)e
(Institute,)g(Theoretical)-64 2741 y(Bioph)o(ysics)g(Group,)f(Univ)o
(ersit)o(y)h(of)h(Illinois)f(at)h(Urbana-Champaign)o(,)e(405)h(N.)i
(Mathews)g(Av)o(e.,Urbana,)d(IL)j(61801.)p eop
%%Page: 2 2
2 1 bop -64 -22 a Ff(Neigh)o(b)q(orho)q(o)q(d)14 b(sequences)-64
29 y Fq(In)e(general)g(top)q(ology)m(,)e(a)i(mapping)e(will)g(b)q(e)j
(said)e(to)h(b)q(e)h(con)o(tin)o(uous)e(if)g(the)i(in)o(v)o(erse)f
(mapping)e(of)h(an)o(y)h(op)q(en)g(set)h(in)e(the)i(image)-64
79 y(space)j(is)e(an)g(op)q(en)h(set)g(in)f(the)h(input)f(space.)21
b(In)14 b(particular,)g(an)o(y)g(neigh)o(b)q(orho)q(o)q(d)g(of)g(a)g
(giv)o(en)g(mapp)q(ed)f(p)q(oin)o(t)h(should)g(ha)o(v)o(e)-64
129 y(as)g(its)g(in)o(v)o(erse)h(mapp)q(ed)e(image)f(a)h(neigh)o(b)q
(orho)q(o)q(d)h(in)f(the)i(input)f(space.)19 b(The)14
b(idea)g(in)f(giving)f(a)i(scale)g(to)g(the)h(con)o(tin)o(uit)o(y)e(of)
-64 179 y(a)h(mapping)d(is)j(to)g(measure)g(the)g(violation)e(of)h
(these)j(neigh)o(b)q(orho)q(o)q(d)d(requiremen)o(ts.)-2
229 y(Let)i Fm(m)f Fq(b)q(e)g(a)g(mapping)d(from)h(an)i(input)f(space)i
Fe(A)f Fq(on)o(to)f(an)h(image)e(space)i Fe(B)q Fq(.)19
b(F)m(or)13 b(an)o(y)g(p)q(oin)o(t)h Fm(y)h Fq(in)f Fm(m)p
Fq(\()p Fe(A)p Fq(\),)g(let)g Fe(V)1805 235 y Fi(B)1834
229 y Fq(\()p Fm(y)q Fq(\))g(b)q(e)-64 278 y(an)g(ordered)h(basis)g(of)
e(neigh)o(b)q(orho)q(o)q(ds)h(of)g Fm(y)q Fq(,)g Fe(V)691
284 y Fi(B)721 278 y Fq(\()p Fm(y)q Fq(\))f(=)f(\()p
Fm(V)871 284 y Fd(1)890 278 y Fq(\()p Fm(y)q Fq(\))p
Fm(;)7 b(V)986 284 y Fd(2)1005 278 y Fq(\()p Fm(y)q Fq(\))p
Fm(;)g(:)g(:)g(:)o Fq(\),)14 b(and)g(for)g(an)o(y)f(p)q(oin)o(t)h
Fm(x)g Fq(in)f Fe(A)p Fq(,)h(let)g Fe(W)1746 284 y Fi(A)1773
278 y Fq(\()p Fm(x)p Fq(\))h(b)q(e)f(an)-64 328 y(ordered)h(basis)e(of)
g(neigh)o(b)q(orho)q(o)q(ds)g(of)g Fm(x)p Fq(,)g Fe(W)647
334 y Fi(A)674 328 y Fq(\()p Fm(x)p Fq(\))e(=)h(\()p
Fm(W)840 334 y Fd(1)859 328 y Fq(\()p Fm(x)p Fq(\))p
Fm(;)7 b(W)973 334 y Fd(2)991 328 y Fq(\()p Fm(x)p Fq(\))p
Fm(;)g(:)g(:)g(:)n Fq(\).)18 b(F)m(or)13 b(all)f Fm(x)h
Fq(and)g Fm(y)q Fq(,)h(w)o(e)f(ha)o(v)o(e)g(the)h(order)g(relations)-64
378 y Fm(V)-40 384 y Fi(k)-19 378 y Fq(\()p Fm(y)q Fq(\))f
Fe(\032)e Fm(V)114 384 y Fi(k)q Fd(+1)177 378 y Fq(\()p
Fm(y)q Fq(\))k(and)f Fm(W)365 384 y Fi(k)385 378 y Fq(\()p
Fm(x)p Fq(\))e Fe(\032)g Fm(W)536 384 y Fi(k)q Fd(+1)598
378 y Fq(\()p Fm(x)p Fq(\).)-2 428 y(A)j(measure)f(of)f(con)o(tin)o
(uit)o(y)g(of)h(the)g(mapping)e(will)h(b)q(e)h(deriv)o(ed)h(from)d(a)i
(comparison)f(b)q(et)o(w)o(een)i(the)g(t)o(w)o(o)e(ordered)j
Fl(neigh-)-64 478 y(b)n(orho)n(o)n(d)e(se)n(quenc)n(es)f
Fe(W)310 484 y Fi(A)338 478 y Fq(\()p Fm(x)p Fq(\))f(and)g
Fm(m)521 463 y Fk(\000)p Fd(1)566 478 y Fe(fV)612 484
y Fi(B)641 478 y Fq(\()p Fm(m)p Fq(\()p Fm(x)p Fq(\)\))p
Fe(g)p Fq(.)18 b(The)13 b(con)o(tin)o(uit)o(y)f(of)g(the)h(in)o(v)o
(erse)g(mapping)e(will)g(b)q(e)i(c)o(haracterized)h(b)o(y)-64
527 y(a)g(comparison)e(b)q(et)o(w)o(een)k(the)e(t)o(w)o(o)f(neigh)o(b)q
(orho)q(o)q(d)h(sequences)j Fm(m)p Fe(fW)1048 533 y Fi(A)1075
527 y Fq(\()p Fm(x)p Fq(\))p Fe(g)c Fq(and)h Fe(V)1271
533 y Fi(B)1300 527 y Fq(\()p Fm(m)p Fq(\()p Fm(x)p Fq(\)\).)-2
577 y(When)g(the)g(t)o(w)o(o)f(spaces)h Fe(A)g Fq(and)f
Fe(B)i Fq(p)q(ossess)g(a)e(metric,)f(one)i(approac)o(h)f(is)g(to)g
(compare)g(the)h(neigh)o(b)q(orho)q(o)q(d)f(diameters)g(in)-64
627 y(all)e(sequences)k([1)o(].)i(Set-theoretic)d(comparisons)d(b)q(et)
o(w)o(een)j(neigh)o(b)q(orho)q(o)q(ds)e(are)h(more)e(suited)i(to)f(com)
o(binatorial)e(structures)-64 677 y(suc)o(h)15 b(as)f(graphs.)-64
749 y Ff(Set-theoreti)o(c)f(comparisons)-64 800 y Fq(W)m(e)h(will)f
(consider)i(from)e(no)o(w)g(on)h(a)g(graph)h(matc)o(hing)d(as)i(a)g
(one-to-one)h(corresp)q(ondence)i(mapping)12 b(b)q(et)o(w)o(een)k(no)q
(des.)k(The)-64 850 y(basic)13 b(neigh)o(b)q(orho)q(o)q(ds)h
Fe(W)357 856 y Fi(A)384 850 y Fq(\()p Fm(x)p Fq(\))f(and)g
Fe(V)558 856 y Fi(A)585 850 y Fq(\()p Fm(y)q Fq(\))h(can)g(b)q(e)f
(de\014ned)i(as)e(sets)h(of)f(balls)f(cen)o(tered)j(in)e
Fm(x)g Fq(and)g Fm(y)h Fq(with)f(increasing)g(radii;)-64
900 y(for)k(instance,)i Fm(V)205 906 y Fi(k)226 900 y
Fq(\()p Fm(y)q Fq(\))f(=)g Ff(B)381 906 y Fi(B)409 900
y Fq(\()p Fm(y)q(;)7 b(k)q Fq(\))18 b(and)f Fm(W)645
906 y Fi(k)666 900 y Fq(\()p Fm(x)p Fq(\))h(=)f Ff(B)823
906 y Fi(A)850 900 y Fq(\()p Fm(x;)7 b(k)q Fq(\),)17
b(if)g(the)h(diameters)f(of)g(the)h(input)f(and)g(output)h(graphs)g
(are)-64 950 y(similar.)e(A)e(rescaling)g(of)f(the)i(radii)d(ma)o(y)g
(b)q(e)j(necessary)h(to)e(\014t)g(the)g(same)f(n)o(um)o(b)q(er)g(of)h
(neigh)o(b)q(orho)q(o)q(ds)g(in)o(to)f(b)q(oth)h(graphs.)-2
1000 y(The)20 b(di\013erence)h(b)q(et)o(w)o(een)f(t)o(w)o(o)e(neigh)o
(b)q(orho)q(o)q(ds)i(with)e(the)i(same)e(rank)h(in)f(the)i(neigh)o(b)q
(orho)q(o)q(d)e(sequences)k(could)c(b)q(e)-64 1049 y(measured)i(b)o(y)g
(computing)e(the)i(cardinal)f(of)g(the)i(sets)g(resulting)f(from)e(v)n
(arious)h(set)i(theoretic)g(op)q(erations,)g(instead)f(of)-64
1099 y(metric)13 b(comparison.)k(De\014ne)e(a)e(set)i(of)e(n)o(um)o(b)q
(ers)h Fm(Q)777 1105 y Fd(direct)862 1099 y Fq(\()p Fm(x;)7
b(k)q Fq(\),)13 b(based)h(on)g(symmetric)e(set)j(di\013erence)h(as:)524
1245 y Fm(Q)557 1251 y Fd(direct)642 1245 y Fq(\()p Fm(x;)7
b(k)q Fq(\))k(=)h(2)841 1154 y Fj(\014)841 1179 y(\014)841
1204 y(\014)855 1201 y Fm(m)891 1184 y Fk(\000)p Fd(1)943
1155 y Fj(\020)968 1201 y Fm(V)992 1207 y Fi(k)1012 1201
y Fq(\()p Fm(m)p Fq(\()p Fm(x)p Fq(\)\))1136 1155 y Fj(\021)1171
1201 y Fe(\\)d Fm(W)1247 1207 y Fi(k)1268 1201 y Fq(\()p
Fm(x)p Fq(\))1324 1154 y Fj(\014)1324 1179 y(\014)1324
1204 y(\014)p 827 1235 525 2 v 827 1240 a(\014)827 1265
y(\014)827 1290 y(\014)841 1288 y Fm(m)877 1271 y Fk(\000)p
Fd(1)929 1242 y Fj(\020)954 1288 y Fm(V)978 1294 y Fi(k)999
1288 y Fq(\()p Fm(m)p Fq(\()p Fm(x)p Fq(\)\))1123 1242
y Fj(\021)1148 1240 y(\014)1148 1265 y(\014)1148 1290
y(\014)1171 1288 y Fq(+)h Fe(j)p Fm(W)1264 1294 y Fi(k)1284
1288 y Fq(\()p Fm(x)p Fq(\))p Fe(j)-64 1388 y Fq(Those)16
b(n)o(um)o(b)q(ers)e(c)o(haracterize)j(the)e(lo)q(cal)f(neigh)o(b)q
(orho)q(o)q(d)h(deformations)e(of)i(the)g(direct)h(mapping)d
Fm(m)g Fq(:)g Fe(A)g(\000)-6 b(!)12 b(B)q Fq(.)22 b(Similar)-64
1437 y(n)o(um)o(b)q(ers,)13 b Fm(Q)148 1443 y Fd(in)o(v)o(erse)249
1437 y Fq(\()p Fm(y)q(;)7 b(k)q Fq(\),)14 b(can)g(b)q(e)g(de\014ned)h
(for)e(the)i(in)o(v)o(erse)f(mapping,)d(b)o(y)j(comparing)d(the)k(t)o
(w)o(o)e(neigh)o(b)q(orho)q(o)q(d)h(sequences)-64 1487
y Fm(m)p Fe(fW)34 1493 y Fi(A)61 1487 y Fq(\()p Fm(x)p
Fq(\))p Fe(g)19 b Fq(and)f Fe(V)267 1493 y Fi(B)296 1487
y Fq(\()p Fm(m)p Fq(\()p Fm(x)p Fq(\)\).)33 b(The)19
b(optim)o(um)c(of)j(the)h(ab)q(o)o(v)o(e)g(n)o(um)o(b)q(ers)f(is)g
(obtained)h(when)g Fm(Q)1527 1493 y Fd(direct)1612 1487
y Fq(\()p Fm(x;)7 b(k)q Fq(\))18 b(=)i(1,)f(for)f(all)-64
1537 y(couples)d(\()p Fm(x;)7 b(k)q Fq(\).)-2 1587 y(The)k(in)o
(teresting)g(prop)q(ert)o(y)g(of)e(the)i(similar)d(n)o(um)o(b)q(ers)h
(measures)i(de\014ned)g(in)f([1)o(])f(w)o(as)h(their)h(abilit)o(y)d(to)
i(detect)i(whether)f(the)-64 1637 y(in)o(trinsic)g(dimension)e(of)h
(the)h(output)g(map)e(w)o(as)i(to)q(o)f(small)e(or)j(to)q(o)g(large)f
(to)h(represen)o(t)i(the)e(whole)f(input)h(space;)h(the)f(n)o(um)o(b)q
(ers)-64 1687 y(w)o(ere)17 b(symmetric)c(around)j(0.)22
b(It)15 b(is)h(p)q(ossible)f(also)g(to)h(pro)q(duce)g(set)h
(theoretically)e(n)o(um)o(b)q(ers)g(whic)o(h)g(will)f(c)o(haracterize)j
(the)-64 1736 y(adequacy)d(of)g(the)g(output)g(map)e(as)287
1879 y Fm(R)319 1885 y Fd(direct)404 1879 y Fq(\()p Fm(x;)7
b(k)q Fq(\))j(=)i(2)589 1788 y Fj(\014)589 1813 y(\014)589
1838 y(\014)603 1836 y Fm(m)639 1819 y Fk(\000)p Fd(1)691
1790 y Fj(\020)716 1836 y Fm(V)740 1842 y Fi(k)760 1836
y Fq(\()p Fm(m)p Fq(\()p Fm(x)p Fq(\)\))884 1790 y Fj(\021)917
1836 y Fe(n)p Fm(W)977 1842 y Fi(k)997 1836 y Fq(\()p
Fm(x)p Fq(\))1053 1788 y Fj(\014)1053 1813 y(\014)1053
1838 y(\014)1076 1836 y Fe(\000)1118 1788 y Fj(\014)1118
1813 y(\014)1118 1838 y(\014)1131 1836 y Fm(W)1170 1842
y Fi(k)1191 1836 y Fq(\()p Fm(x)p Fq(\))p Fe(n)p Fm(m)1304
1819 y Fk(\000)p Fd(1)1356 1790 y Fj(\020)1381 1836 y
Fm(V)1405 1842 y Fi(k)1425 1836 y Fq(\()p Fm(m)p Fq(\()p
Fm(x)p Fq(\)\))1549 1790 y Fj(\021)1575 1788 y(\014)1575
1813 y(\014)1575 1838 y(\014)p 589 1870 1000 2 v 827
1875 a(\014)827 1900 y(\014)827 1925 y(\014)841 1923
y Fm(m)877 1905 y Fk(\000)p Fd(1)929 1876 y Fj(\020)953
1923 y Fm(V)977 1929 y Fi(k)998 1923 y Fq(\()p Fm(m)p
Fq(\()p Fm(x)p Fq(\)\))1122 1876 y Fj(\021)1147 1875
y(\014)1147 1900 y(\014)1147 1925 y(\014)1171 1923 y
Fq(+)d Fe(j)p Fm(W)1263 1929 y Fi(k)1283 1923 y Fq(\()p
Fm(x)p Fq(\))p Fe(j)-64 2022 y Fq(Those)k(n)o(um)o(b)q(ers)e(c)o
(haracterize)i(more)e(globally)f(the)i(neigh)o(b)q(orho)q(o)q(d)g
(deformation.)j(The)d(optimal)d(mapping)h(corresp)q(onds)j(to)-64
2072 y(a)h(set)i(of)e(n)o(um)o(b)q(ers)g(whic)o(h)g(are)h(close)g(to)g
(0.)k(Negativ)o(e)c(n)o(um)o(b)q(ers)f(w)o(ould)g(mean)f(that)h(the)i
(mapping)c(is)i(lo)q(cally)f(con)o(tracting.)-64 2122
y(Again,)g(similar)e(n)o(um)o(b)q(ers)j(could)f(b)q(e)i(de\014ned)g(to)
f(c)o(haracterize)h(the)g(in)o(v)o(erse)f(mapping.)-2
2172 y(All)j(those)h(series)h(of)e(n)o(um)o(b)q(ers)h(can)f(b)q(e)h(a)o
(v)o(eraged)g(out)f(to)h(giv)o(e)f(a)g(global)f(c)o(haracteristization)
i(of)f(the)h(neigh)o(b)q(orho)q(o)q(d)-64 2222 y(preserv)n(ation)d
(ratio)e(of)g(the)i(mapping.)h(Some)c(examples)h(of)h(the)g(ab)q(o)o(v)
o(e)g(measures)g(can)g(b)q(e)g(found)g(in)f([7].)-64
2350 y Fn(2)67 b(Graph)23 b(matc)n(hing)h(b)n(y)f(SOFM)-64
2432 y Fs(2.1)56 b(Self-organizing)17 b(feature)h(maps)-64
2490 y Fq(Self-organizing)12 b(feature)i(maps)e(\(SOFM\))i(is)g(a)f
(simple)e(adaptiv)o(e)i(algorithm)e(able)i(to)g(p)q(erform)g(a)g
(discrete)i(and)e(con)o(tin)o(uous)-64 2540 y(represen)o(tation)20
b(of)d(a)g(high-dimensional)e(space)k(b)o(y)e(trying)h(to)f(matc)o(h)g
(iterativ)o(ely)g(the)i(top)q(ology)d(of)h(a)h(\014xed)g(space,)h(the)
-64 2590 y(actual)g(map,)e(generally)i(a)f(one-)h(or)g(t)o(w)o
(o-dimensional)c(lattice,)20 b(and)e(the)i(top)q(ology)d(of)h(an)h
(unkno)o(wn)f(high-dimensional)-64 2640 y(v)o(ector)d(space)g([8)o(].)
-2 2690 y(The)c(formation)c(of)i(the)h(map)e(is)h(designed)h(to)g
(follo)o(w)d(t)o(w)o(o)j(principles:)16 b(1\))9 b(neurons)i(of)e(the)h
(output)g(la)o(y)o(er)f(tend)h(to)f(sp)q(ecialize)-64
2740 y(to)14 b(one)h(input)f(through)g(a)g(long)f(range)h(comp)q
(etition,)f(and)h(2\))g(neigh)o(b)q(oring)f(output)i(neurons)g(tend)g
(to)f(represen)o(t)i(neigh)o(b)q(or)-64 2789 y(instances)j(in)d(the)i
(natural)f(space.)29 b(This)17 b(ob)r(jectiv)o(e)h(can)f(b)q(e)h(ac)o
(hiev)o(ed)f(using)g(a)g(sto)q(c)o(hastic)h(gradien)o(t-lik)o(e)f
(algorithm,)e(in)-64 2839 y(whic)o(h)g(the)h(mo)q(di\014ed)e(co)q
(e\016cien)o(ts)i(at)f(eac)o(h)h(step)g(are)g(the)g(w)o(eigh)o(ts)f(of)
f(the)i(connections)g(linking)e(the)i(most)e(activ)o(e)h(output)-64
2889 y(neuron)21 b(and)f(its)g(neigh)o(b)q(ors)h(to)f(the)h(input)f
(space.)38 b(The)20 b(resulting)h(map)d(is)i(able)g(to)g(represen)o(t)j
(the)e(most)e(imp)q(ortan)o(t)p eop
%%Page: 3 3
3 2 bop 395 -180 1106 2 v 395 317 2 498 v 422 305 a @beginspecial
40 @llx 541 @lly 446 @urx 719.062500 @ury 2551 @rwi 1133
@rhi @setspecial
%%BeginDocument: proba.eps
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/Min {2 copy lt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
 } bind def
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
 } bind def
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   FontDirectory basefontname known not {
    /basefontname /Times-Roman def
   } if
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
/clip2pathbbox {
	/magicNum linewidth 2 div 1 2 sqrt div mul def
	pathbbox
	/urymn exch magicNum add def
	/urxmn exch magicNum add def
	/llymn exch magicNum sub def
	/llxmn exch magicNum sub def
	newpath llxmn llymn moveto llxmn urymn lineto urxmn urymn lineto urxmn llymn lineto
	closepath clip newpath
} bind def
/Line {
MAV /LC get length 0 ne
{
	gsave
			newpath
			MAV /ArrowType get length 0 eq
			MAV /SD get length 0 eq and
			{2 setlinecap /UseClip {clip2pathbbox} def }
			{0 setlinecap /UseClip {} def } ifelse
			0 792 translate
			1 -1 scale
			CTM currentmatrix pop
			/yStart exch def /xStart exch def /yEnd exch def /xEnd exch def /linewidth exch def
			MAV /ArrowType get length 0 eq xStart xEnd ne yStart yEnd ne and and
			{xStart yStart moveto xEnd yEnd lineto UseClip xStart yStart moveto xEnd yEnd lineto}
			{xStart yStart moveto xEnd yEnd lineto} ifelse
			linewidth setlinewidth SD strokepath
			CheckPath {LC PF ArrowType} if
	grestore
}
{pop pop pop pop pop} ifelse
} bind def
/ZeroLine {
	gsave
		newpath
		MAV /ArrowType get length 0 ne {
			/UseClip {} def
			0 792 translate
			1 -1 scale
			pop pop pop pop pop
			CTM currentmatrix pop
			ArrowType
		} if
	grestore
} bind def
/CompensateForStroke {
	sin currentlinewidth mul
	exch
	cos currentlinewidth mul
	dup 0 translate
	4 -1 roll exch 2.0 mul sub
	3 1 roll
	2.0 mul sub
} bind def
/arrowdict 10 dict def
arrowdict begin
	/SwallowTail {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		.666 0.0 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/Triangular {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/OpenTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
	} bind def
	/ClosedTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
		closepath
	} bind def
	/SlashBar {
		newpath
		0.5 -.5 moveto
		-.5 0.5 lineto
	} bind def
	/Dot {
		newpath
		0.5 0.0 moveto
		0 0 1 0 360 arc
		closepath
	} bind def
	/ExtSlashBar {
		newpath
		1.0 -.5 moveto
		0.0 0.5 lineto
	} bind def
end
/ScaleArrowHead {
	0 0 4 -2 roll
	0 0 1 1
	8 -4 roll GetBoxesRatio
	scale
} bind def
/DrawArrowHead {
	gsave
	[] 0 setdash
	currentpoint translate rotate
	{
		4 copy
		gsave
			initmatrix
			100 200 translate
			msave
				ScaleArrowHead pop
				arrowdict exch get exec
			mrestore
			strokepath
			0 0 3 index 3 index
			pathbbox 8 4 roll
			GetBoxesRatio
			4 2 roll
		grestore
		3 index 1.0 exch sub
		6 -1 roll
		{
			2 index mul
			0 translate
		}{
			pop
		} ifelse
		msave
			ScaleArrowHead scale
			arrowdict exch get exec
		mrestore
		strokepath
	} {
		msave
		ScaleArrowHead
		arrowdict exch get exec
		mrestore
	} ifelse
		CheckPath {
			LC PF
		} if
	grestore
} bind def
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
/E {
1.415 setmiterlimit
CM currentmatrix pop
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 0 360 arc closepath
CM setmatrix
} bind def
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def


initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
%
%tLayer
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 130.498 439.456 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 82.309 360.086 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 385.598 133.332 413.944 161.679 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 405.441 121.994 413.944 161.679 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 442.291 133.332 422.448 133.332 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 430.952 104.986 442.291 133.332 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 430.952 104.986 405.441 121.994 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 442.291 133.332 442.291 161.679 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 413.944 161.679 442.291 161.679 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 413.944 76.639 430.952 104.986 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 102.151 428.118 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 362.921 85.143 442.291 133.332 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 413.944 76.639 385.598 104.986 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 413.944 76.639 362.921 85.143 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 73.805 411.110 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 385.598 104.986 385.598 133.332 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 422.448 133.332 385.598 133.332 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 385.598 104.986 405.441 121.994 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 362.921 85.143 385.598 104.986 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 184.356 425.283 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 442.291 161.679 428.118 187.190 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 158.844 439.456 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 413.944 161.679 394.102 190.025 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 428.118 187.190 394.102 190.025 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 394.102 190.025 368.590 161.679 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 385.598 133.332 371.425 161.679 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 156.009 388.433 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 391.267 158.844 371.425 161.679 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 442.291 133.332 391.267 158.844 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 428.118 187.190 391.267 158.844 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 362.921 85.143 371.425 161.679 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 130.498 382.763 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 102.151 382.763 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 158.844 411.110 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 119.159 402.606 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 187.190 391.267 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 -1.570 158.844 368.590 0.000 0.000 5.669 5.669 rect
%@EndOval
%
%tfEndGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 79.474 85.125 90.812 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 93.647 53.944 116.324 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 104.986 110.637 107.820 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 113.490 85.125 113.490 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 124.828 138.984 107.820 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 136.167 121.976 127.663 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 147.505 85.125 136.167 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 161.679 167.330 136.167 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 173.017 138.984 153.175 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 181.521 56.779 150.340 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 195.694 110.637 164.513 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 204.198 82.291 164.513 Line
%@EndLine
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 161.679 107.803 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 110.637 107.820 82.291 136.167 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 121.976 127.663 82.291 136.167 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 110.637 164.513 110.637 144.671 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 138.984 153.175 110.637 164.513 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
2.000 138.984 153.175 121.976 127.663 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 110.637 164.513 82.291 164.513 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 82.291 136.167 82.291 164.513 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
2.000 167.330 136.167 138.984 153.175 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 150.340 136.149 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
2.000 167.330 136.167 138.984 107.820 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 133.332 164.496 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 138.984 107.820 110.637 107.820 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 110.637 144.671 110.637 107.820 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
2.000 138.984 107.820 121.976 127.663 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 82.291 164.513 56.779 150.340 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 161.679 79.456 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 82.291 136.167 53.944 116.324 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 56.779 150.340 53.944 116.324 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 53.944 116.324 82.291 90.813 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 110.637 107.820 82.291 93.647 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 85.126 113.490 82.291 93.647 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 110.637 164.513 85.126 113.490 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 56.779 150.340 85.126 113.490 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 104.986 107.803 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 104.986 136.149 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 133.332 79.456 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 124.828 119.141 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 113.490 51.110 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 90.812 79.456 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
2.000 138.984 153.175 138.984 107.820 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
2.000 167.330 136.167 121.976 127.663 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 110.655 82.291 0.000 0.000 5.669 5.669 rect
%@EndOval
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 147.505 53.944 0.000 0.000 5.669 5.669 rect
%@EndOval
%
%tfEndGrp
%
%@BeginText
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Palatino-Roman /Palatino-Roman EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 191.836 41.098 0.000 0.000 14.000 65.000 rect
%@EndRect
gsave
73.598 198.836 T translate
0.0 rotate
1 1 scale
12.000 (_Palatino-Roman) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(I) -31.902 4.000 S
(n) -27.859 4.000 S
(p) -20.875 4.000 S
(u) -13.662 4.000 S
(t) -6.425 4.000 S
( ) -2.511 4.000 S
(g) 0.488 4.000 S
(r) 7.161 4.000 S
(a) 11.902 4.000 S
(p) 17.902 4.000 S
(h) 25.115 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 208.175 367.775 0.000 0.000 14.000 75.000 rect
%@EndRect
gsave
405.275 215.175 T translate
0.0 rotate
1 1 scale
12.000 (_Palatino-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(O) -36.003 4.000 S
(u) -26.570 4.000 S
(t) -19.333 4.000 S
(p) -15.419 4.000 S
(u) -8.206 4.000 S
(t) -0.970 4.000 S
( ) 2.943 4.000 S
(g) 5.943 4.000 S
(r) 12.617 4.000 S
(a) 17.357 4.000 S
(p) 23.357 4.000 S
(h) 30.570 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 222.844 197.271 0.000 0.000 27.000 71.000 rect
%@EndRect
gsave
232.771 236.344 T translate
0.0 rotate
1 1 scale
12.000 (_Palatino-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(p) -32.766 -2.000 S
(r) -25.553 -2.000 S
(o) -20.813 -2.000 S
(b) -14.262 -2.000 S
(a) -7.623 -2.000 S
(b) -1.623 -2.000 S
(i) 5.014 -2.000 S
(l) 8.507 -2.000 S
(i) 11.999 -2.000 S
(s) 15.491 -2.000 S
(t) 20.577 -2.000 S
(i) 24.491 -2.000 S
(c) 27.983 -2.000 S
( ) 33.309 -2.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(m) -22.225 11.000 S
(e) -11.631 11.000 S
(d) -5.883 11.000 S
(i) 1.446 11.000 S
(u) 4.938 11.000 S
(m) 12.174 11.000 S
grestore
%@EndText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 79.474 362.921 85.143 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 90.812 362.921 85.143 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 102.151 362.921 85.143 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 113.490 362.921 85.143 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 124.828 362.921 85.143 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 139.001 362.921 85.143 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 150.340 362.921 85.143 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 207.033 362.921 85.143 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 79.474 394.102 190.025 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 93.647 394.102 190.025 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 104.986 394.102 190.025 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 116.324 394.102 190.025 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 232.527 124.828 394.102 190.025 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 229.692 207.033 394.102 190.025 Line
%@EndLine
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC {0.500 0.500 0.500 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 99.316 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 121.994 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 133.332 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC {0.500 0.500 0.500 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 144.671 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 156.009 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 167.348 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 178.686 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC {0.500 0.500 0.500 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 190.025 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 201.364 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 76.639 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 87.978 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0004 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 110.655 226.858 0.000 0.000 8.503 8.503 rect
%@EndRect
%
%tfEndGrp
%
%
%tfEndGrp
%
restore
end
%%EndDocument
 @endspecial 1498 317 V 395 319 1106 2 v 402 396 a Fq(Figure)14
b(1:)k(Correlated)c(pattern)h(approac)o(h)f(of)f(graph)h(matc)o(hing.)
-64 476 y(neigh)o(b)q(orho)q(o)q(d)f(relationships)f(b)q(et)o(w)o(een)j
(the)e(instances)h(of)e(the)i(input)e(space.)19 b(If)12
b(the)i(metric)e(of)g(the)h(input)g(space)h(is)f(deriv)o(ed)-64
525 y(from)f(a)h(similarit)o(y)d(distance,)j(the)h(algorithm)d(ensures)
k(that)e(neigh)o(b)q(oring)f(neurons)j(in)d(the)i(output)f(map)f
(represen)o(t)k(similar)-64 575 y(instances)f(in)f(the)h(input)e
(space:)20 b(this)14 b(means)f(that)h(the)h Fl(inverse)e
Fq(mapping,)f(from)g(the)j(output)f(la)o(y)o(er)f(to)h(the)h(feature)f
(space,)-64 625 y(is)g(con)o(tin)o(uous.)k(This)c(ma)o(y)e(not)h(b)q(e)
i(the)f(case,)h(ho)o(w)o(ev)o(er,)f(of)f(the)h(direct)h(mapping)d([10)o
(,)h(9].)-2 675 y(SOFM)h(can)f(also)g(b)q(e)g(regarded)h(as)f(a)g
Fl(ve)n(ctor)h(quantization)f Fq(algorithm;)e(the)i(w)o(eigh)o(ts)g
(attac)o(hed)h(to)f(eac)o(h)g(output)g(neuron)-64 725
y(is)20 b(an)g(elemen)o(t)g(that)g(quan)o(ti\014es)h(an)f(input)g
(space)h(b)o(y)f(trying)g(to)g(minimi)o(ze)e(an)i(error)h(of)f(the)h
(form)d Fm(E)r Fq([)p Fm(W)6 b Fq(])22 b(=)1817 691 y
Fj(R)1852 725 y Fe(k)p Ff(v)14 b Fe(\000)-64 775 y Ff(w)-29
782 y Fi(s)p Fd(\()p Ff(v)q Fd(\))41 775 y Fe(k)62 759
y Fi(r)80 775 y Fm(dP)6 b Fq(\()p Ff(v)p Fq(\),)11 b(where)i
Ff(v)p Fq(,)f(is)f(an)f(input)h(v)o(ector,)h Ff(w)q Fq(,)g(is)e(a)h(w)o
(eigh)o(t)g(v)o(ector)h(asso)q(ciated)g(with)e(neuron)i
Fm(s)p Fq(\()p Ff(v)r Fq(\),)f(the)g(neuron)h(ha)o(ving)-64
824 y(its)j(w)o(eigh)o(t)f(v)o(ector)i(closest)g(to)e(the)i(input)f
(stim)o(ulus.)k(The)c(map,)e(therefore,)j(acts)f(as)g(a)g(probabilit)o
(y-geometry)d(transducer)-64 874 y(since)18 b(it)e(enco)q(des)i(in)e(a)
g(geometrically)f(ordered)i(w)o(a)o(y)f(with)g(greater)i(care)f(more)f
(probable)g(ev)o(en)o(ts;)j(the)e(geometry)f(of)f(the)-64
924 y(input)h(is)f(used)h(only)f(implicitly)d(in)j(the)h(probabilistic)
f(distribution)g(of)g(the)h(input)f(space.)24 b(A)16
b(probabilistic)e(space)j(can)e(b)q(e)-64 974 y(used)d(as)f(a)g
Fl(me)n(dium)g Fq(in)f(whic)o(h)h(to)g(enco)q(de)h(geometric)e
(information)e(whic)o(h)j(in)g(turn)g(will)f(b)q(e)h(represen)o(ted)j
(later)d(geometrically)-64 1024 y(on)j(the)g(map.)j(This)d(is)f(the)i
(prop)q(ert)o(y)g(that)e(will)g(b)q(e)h(used)h(to)f(construct)h(the)g
(graph)f(matc)o(hing.)-64 1140 y Fs(2.2)56 b(Graph)19
b(as)g(a)g(set)f(of)h(correlated)e(patterns)-64 1199
y Fq(A)10 b(graph)g(is)g(mathematical)d(ob)r(ject)k(represen)o(ting)h
Fl(glob)n(al)r(ly)d Fq(the)i(relations)f(that)g(ma)o(y)e(exist)i(b)q
(et)o(w)o(een)i(a)e(giv)o(en)f(set)i(of)f(elemen)o(ts.)-64
1248 y(In)i(this)g(pap)q(er,)h(the)g(existence)g(of)f(an)g(edge)g(will)
f(mean)g(that)h(the)h(t)o(w)o(o)e(v)o(ertices)j(link)o(ed)d(are,)h
(someho)o(w,)f(correlated,)i(and)f(that)-64 1298 y(this)h(correlation)f
(is)g(transitiv)o(e.)17 b(In)c(the)f(v)o(o)q(cabulary)g(of)g(neural)g
(net)o(w)o(orks,)h(the)g(existence)h(of)d(an)h(edge)h(is)f(the)h
(manifestation)-64 1348 y(of)i(the)g(p)q(ossibilit)o(y)f(that)h(t)o(w)o
(o)f(no)q(des)i(are)g(activ)o(e)f(at)f(the)i(same)e(time,)g(and)g(the)i
(transitivit)o(y)e(prop)q(ert)o(y)i(simply)d(states)j(that)-64
1398 y(the)h(activit)o(y)e(ma)o(y)f(spread)j(o)o(v)o(er)g(the)f(graph)g
(along)f(the)i(connecting)g(edges.)26 b(With)15 b(this)h(view)g(in)g
(mind,)e(a)i(graph)g(can)g(b)q(e)-64 1448 y(considered)g(as)d(the)i
(global)d(summary)g(of)h(the)h Fl(p)n(ossible)g Fq(patterns)h(of)e(no)q
(de)i(activities.)-2 1497 y(The)h(patterns)g(of)e(activit)o(y)f(that)i
(pro)q(duce)h(the)f(gobal)f(description)h(of)f(a)h(graph)f(ma)o(y)f(b)q
(e)i(reco)o(v)o(ered)i(b)o(y)d(simple)f(means.)-64 1547
y(An)21 b(easy)f(w)o(a)o(y)g(to)g(obtain)g(them)f(is)h(b)o(y)g
(computing)f(and)h(com)o(bining)e(the)j(p)q(o)o(w)o(ers)g(of)f(the)h
(adjacency)f(matrix)f Fm(A)1845 1532 y Fi(n)1868 1547
y Fq(\()p Fm(G)p Fq(\),)-64 1597 y(whic)o(h)e(coun)o(ts)g(the)g(n)o(um)
o(b)q(er)f(of)g(paths)h(of)f(length)h Fm(n)f Fq(joining)f(t)o(w)o(o)i
(v)o(ertices)h([3)o(].)26 b(The)17 b(lines)f(\(or)h(columns\))f(of)g
(the)h(matrix)-64 1652 y Fm(P)22 b Fq(=)33 1621 y Fj(P)77
1631 y Fi(N)77 1665 y(k)q Fd(=0)146 1652 y Fm(\015)r(A)200
1637 y Fi(k)222 1652 y Fq(\()p Fm(G)p Fq(\),)16 b(where)i
Fm(\015)i Fq(is)c(some)g(decreasing)i(co)q(e\016cien)o(t)f(in)f(]0)p
Fm(;)7 b Fq(1[)15 b(and)h Fm(N)22 b Fq(is)16 b(a)h(\014xed)g(spreading)
f(length,)h(giv)o(e)f(a)-64 1702 y(set)h(of)f(real)g(v)n(alued)g(v)o
(ectors)h(whic)o(h)f(can)g(b)q(e)h(considered)h(as)e(patterns)h(of)f
(activities,)g(eac)o(h)h(co)q(ordinate)f(corresp)q(onding)h(to)-64
1752 y(a)g(certain)i(lev)o(el)e(of)g(activit)o(y)m(.)27
b(It)18 b(is)f(the)h(o)o(v)o(erall)f Fl(c)n(orr)n(elation)f
Fq(b)q(et)o(w)o(een)j(patterns)g(of)e(activit)o(y)f(that)i(pro)q(duces)
h(the)f(graph)-64 1802 y(structure.)-64 1918 y Fs(2.3)56
b(Matc)n(hing)19 b(of)g(patterns)-64 1977 y Fq(The)f(self-organizing)f
(map)f(algorithm)f(is)j(essen)o(tially)f(an)h(iterativ)o(e)g(gradien)o
(t-lik)o(e)e(algorithm)g(sub)r(ject)j(to)e(a)h(top)q(ological)-64
2026 y(constrain)o(t;)f(this)g(means)e(that)h(one)h(of)e(its)i
(fundamen)o(tal)d(features)j(is)f(the)h(con)o(tin)o(uous)f(c)o
(haracter)i(of)d(the)i(space)g(in)f(whic)o(h)-64 2076
y(the)j(gradien)o(t)g(is)f(computed.)32 b(Graphs,)19
b(ho)o(w)o(ev)o(er,)h(are)f(essen)o(tially)f(discrete)i(mathematical)c
(ob)r(jects.)33 b(The)19 b(problem)e(is)-64 2126 y(th)o(us)h(trying)f
(to)h(em)o(b)q(ed)f(the)h(discrete)h(problem)d(in)i(a)f(con)o(tin)o
(uous)g(w)o(orld)g(in)g(whic)o(h)h(the)g(iterativ)o(e)f(op)q(erations)h
(could)f(b)q(e)-64 2176 y(meaningfully)11 b(p)q(erformed.)-2
2226 y(The)20 b(information)c(used)j(from)e(the)j(output)f(space)g(is)g
(in)f(terms)h(of)f(distances)i(b)q(et)o(w)o(een)g(pairs)f(of)f
(neurons;)k(what)c(is)-64 2276 y(actually)f(needed)h(for)f(the)h
(de\014nition)f(of)f(its)h(top)q(ology)f(is)i(simply)d(an)i(arra)o(y)g
(of)f(in)o(terneuron)i(distances.)29 b(In)18 b(the)f(case)i(of)-64
2325 y(graphs,)14 b(the)g(distance)h(used)g(b)q(et)o(w)o(een)g(neurons)
g(is)f(the)g(shortest)i(path)d(length)h(b)q(et)o(w)o(een)i(v)o(ertices)
f(of)e(a)h(graph.)-2 2375 y(The)d(only)e(questionable)g(space,)j
(therefore,)f(is)f(the)g(input)g(since)g(all)f(of)g(the)h
(computations,)f(i.e.,)g(the)i(w)o(eigh)o(t)e(adjustmen)o(ts,)-64
2425 y(are)16 b(made)e(in)h(it.)23 b(The)15 b(description)h(of)f(a)g
(graph)h(as)f(a)g(set)i(of)d(correlated)j(patterns)f(leads)g(naturally)
e(to)i(the)g(c)o(hoice)g(of)e(the)-64 2475 y(input)g(space)i(as)e(a)g
Fm(d)p Fq(-dimensional)e(v)o(ector)j(space)g(where)h
Fm(d)e Fq(is)g(the)h(order)g(of)f(the)h(input)f(graph.)19
b(The)c(input)f(data)g(will)f(then)-64 2525 y(consist)i(in)e(a)h(set)h
(of)e(v)o(ector)h(represen)o(tation)i(of)d(correlated)i(patterns.)-2
2574 y(Figure)f(1)f(sho)o(ws)h(the)h(basic)e(constituen)o(ts)i(of)e
(the)h(probabilistic)f(approac)o(h)g(of)g(the)h(graph)g(matc)o(hing)e
(adjustmen)o(t.)17 b(The)-64 2624 y(t)o(w)o(o)12 b(graphs)g(are)h
(considered)h(completely)d(connected)j(b)o(y)e(w)o(eigh)o(ted)g
(connections,)h(as)g(in)f(a)g(classical)g(feed-forw)o(ard)g(net)o(w)o
(ork)-64 2674 y(sc)o(heme.)21 b(The)16 b(graph)e(matc)o(hing)f(is)i
(de\014ned)h(as)f(a)f(bipartite)h(v)n(alued)f(graph)h(describ)q(ed)i(b)
o(y)d(a)h(w)o(eigh)o(t)f(matrix.)19 b(During)14 b(the)-64
2724 y(pro)q(cess)i(some)d(w)o(eigh)o(ts)h(tend)g(to)g(v)n(anish)f
(naturally)m(,)f(and)i(some)f(connections)i(get)f(reinforced.)-2
2774 y(The)h(global)d(de\014nition)i(of)f(the)h(graph)g(matc)o(hing)e
(follo)o(ws)g(3)i(steps:)-18 2857 y(1\))21 b(Create)15
b(the)f(set)h(of)e(input)h(v)o(ectors)h(corresp)q(onding)g(to)f(the)g
(correlated)h(patterns.)p eop
%%Page: 4 4
4 3 bop 110 -121 692 2 v 110 303 2 425 v 138 291 a @beginspecial
56 @llx 424 @lly 555 @urx 731.062500 @ury 1559 @rwi @setspecial
%%BeginDocument: map2.eps

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b 65535
2 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1.5 0 0 1.5 -101.25 -223.25 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 197 ] concat
%I 4
38 331
38 540
177 540
177 331
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 197 ] concat
%I
107 540 107 331 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 197 ] concat
%I
38 470 177 470 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 197 ] concat
%I
38 401 177 401 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 118.5 750.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 117.5 683 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 117 614 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 118 546 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 188 753 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 186.5 684 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 186.5 614.5 ] concat
%I
[
(6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 186.5 546 ] concat
%I
[
(7)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 255 753 ] concat
%I
[
(8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 256.5 684 ] concat
%I
[
(9)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 248.5 616 ] concat
%I
[
(10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 248.5 546.5 ] concat
%I
[
(11)
] Text
End

End %I eop

Begin %I Pict
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1.5 0 0 1.5 -206.25 -193.25 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 259 -69 ] concat

Begin %I Rect
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 128 97 ] concat
%I
61 461 131 530 Rect
End

Begin %I Rect
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 168 177 ] concat
%I
61 461 131 530 Rect
End

Begin %I Rect
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 208 257 ] concat
%I
61 461 131 530 Rect
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 148 197 ] concat
%I
41 431 121 590 Line
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 218 127 ] concat
%I
41 431 121 590 Line
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 148 127 ] concat
%I
41 431 121 590 Line
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 218 197 ] concat
%I
41 431 121 590 Line
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 438 568 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 508 568 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 438 498 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 508 498 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 478 648 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 548 648 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 548 578 ] concat
%I
[
(6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 478 578 ] concat
%I
[
(7)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 518 727 ] concat
%I
[
(8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 588 727 ] concat
%I
[
(9)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 578 658 ] concat
%I
[
(10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 508 658 ] concat
%I
[
(11)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.5 0 0 1.5 36.75 72.25 ] concat
%I
197 441 297 441 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1.5 0 0 1.5 362.25 763.75 ] concat
%I
[
(Mapping ?)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 800 303 V 110 305 692 2 v 902 -117 883 2
v 902 303 2 421 v 930 291 a
 currentpoint currentpoint translate 0.33632 0.33632 scale neg exch
neg exch translate
 930 291 a 3388 291 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 3388
291 a @beginspecial 89 @llx 98 @lly 371 @urx 688 @ury
2820 @rwi @setspecial
%%BeginDocument: embed2.eps

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0 -1.5 1.5 0 -673.5 1053 ] concat

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
287 381 356 381 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
356 381 356 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
356 311 287 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
287 311 287 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -118 296 ] concat
%I
287 381 356 381 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -118 296 ] concat
%I
356 381 356 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -118 296 ] concat
%I
356 311 287 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -118 296 ] concat
%I
287 311 287 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -77 375 ] concat
%I
287 381 356 381 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -77 375 ] concat
%I
356 381 356 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -77 375 ] concat
%I
356 311 287 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -77 375 ] concat
%I
287 311 287 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
287 381 326 461 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
356 381 396 461 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
287 311 326 391 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
356 311 396 391 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
326 461 366 540 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
326 391 366 470 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
396 461 436 540 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -157 216 ] concat
%I
396 391 436 470 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
287 381 356 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
356 381 356 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
356 311 287 311 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
287 311 287 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 51 296 ] concat
%I
287 381 356 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 51 296 ] concat
%I
356 381 356 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 51 296 ] concat
%I
356 311 287 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 51 296 ] concat
%I
287 311 287 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 375 ] concat
%I
287 381 356 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 375 ] concat
%I
356 381 356 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 375 ] concat
%I
356 311 287 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 375 ] concat
%I
287 311 287 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
287 381 326 461 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
356 381 396 461 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
287 311 326 391 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
356 311 396 391 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
326 461 366 540 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
326 391 366 470 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
396 461 436 540 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 12 216 ] concat
%I
396 391 436 470 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
287 381 356 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
356 381 356 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
356 311 287 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
287 311 287 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 221 296 ] concat
%I
287 381 356 381 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 221 296 ] concat
%I
356 381 356 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 221 296 ] concat
%I
356 311 287 311 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 221 296 ] concat
%I
287 311 287 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 262 375 ] concat
%I
287 381 356 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 262 375 ] concat
%I
356 381 356 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 262 375 ] concat
%I
356 311 287 311 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 262 375 ] concat
%I
287 311 287 381 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
287 381 326 461 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
356 381 396 461 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
287 311 326 391 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
356 311 396 391 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
326 461 366 540 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
326 391 366 470 Line
End

Begin %I Line
%I b 13107
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
396 461 436 540 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 182 216 ] concat
%I
396 391 436 470 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 219 538 ] concat
%I
[
(\(a\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 389 538 ] concat
%I
[
(\(b\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-75-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 558 538 ] concat
%I
[
(\(c\))
] Text
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 197 ] concat
%I 5
207 331
187 381
197 441
237 520
287 560
5 BSpl
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 197 ] concat
%I 6
277 331
326 381
366 451
376 490
376 530
356 560
6 BSpl
End

Begin %I BSpl
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 92 197 ] concat
%I 5
376 401
386 461
406 510
436 510
456 490
5 BSpl
End

End %I eop

End %I eop

showpage


end
%%EndDocument
 @endspecial 4563 291 a
 currentpoint grestore moveto
 4563 291 a 930 291 a
 currentpoint currentpoint translate 1 0.33632 div 1 0.33632 div scale
neg exch neg exch translate
 930 291
a 1783 303 2 421 v 902 305 883 2 v -4 382 a Fq(Figure)14
b(2:)k(The)c(problem)f(of)g(mapping)f(a)h(3)c Fe(\002)h
Fq(4)j(grid)h(on)f Fm(P)953 388 y Fd(3)981 382 y Fe(\002)c
Fm(C)1052 388 y Fd(4)1084 382 y Fq(\(left\),)14 b(and)g(examples)f(of)g
(the)h(p)q(ossible)g(\(righ)o(t\).)-18 464 y(2\))21 b(Run)14
b(the)g(SOFM.)-18 514 y(3\))21 b(De\014ne)15 b(the)f(graph)g(matc)o
(hing)e(using)h(the)i(w)o(eigh)o(ts.)-2 597 y(The)j(in)o(trinsic)e
(symmetry)f(of)i(the)g(graph)g(matc)o(hing)e(problem)g(allo)o(ws)h(one)
h(to)g(enforce)h(the)f(pro)q(cess)i(to)d(satisfy)h(more)-64
647 y(bicon)o(tin)o(uit)o(y)d(constrain)o(ts;)j(the)f(w)o(eigh)o(t)f
(connections)i(can)e(b)q(e)h(considered)h(undirected,)g(i.e.,)d(the)j
(connection)f(linking)d(the)-64 697 y(input)k(no)q(de)h
Fm(u)f Fq(to)h(the)g(output)f(no)q(de)h Fm(v)h Fq(can)f(b)q(e)g
(considered)h(as)e(also)g(linking)f Fm(v)j Fq(to)e Fm(u)p
Fq(.)28 b(If)17 b Fm(W)23 b Fq(is)18 b(the)g(matrix)d(of)i(w)o(eigh)o
(ts)-64 746 y(where)g(the)g Fm(j)r Fq(-th)f(column)e(corresp)q(onds)k
(to)e(the)g(w)o(eigh)o(ts)g(attac)o(hed)h(to)f(the)g
Fm(j)r Fq(-th)g(output)g(neuron,)h Fm(W)1595 731 y Fi(T)1621
746 y Fq(,)f(the)g(transp)q(ose)i(of)-64 796 y Fm(W)6
b Fq(,)16 b(is)f(a)h(matrix)d(of)i(w)o(eigh)o(ts)h(where)h(the)f
Fm(i)p Fq(-th)g(column)e(corresp)q(onds)j(to)f(the)g(w)o(eigh)o(ts)g
(attac)o(hed)g(to)f(the)i Fm(i)p Fq(-th)f(input)f(no)q(de.)-64
846 y(Both)e(the)g(input)f(and)h(output)f(graphs)h(can)g(alternativ)o
(ely)e(exc)o(hange)i(their)g(roles;)g(this)g(w)o(ould)e(allo)o(w)g(up)q
(dating)h(the)h(w)o(eigh)o(ts)-64 896 y(considered)i(in)e(a)h(giv)o(en)
f(iteration)g(as)g Fm(W)20 b Fq(and)13 b(in)g(a)h(further)g(one)g(as)f
Fm(W)1080 881 y Fi(T)1107 896 y Fq(,)g(increasing)g(in)h(this)f(w)o(a)o
(y)g(the)h(bicon)o(tin)o(uit)o(y)e(of)h(the)-64 946 y(graph)h(matc)o
(hing.)-64 1062 y Fs(2.4)56 b(Example)-64 1121 y Fq(In)12
b(this)g(section,)h(w)o(e)f(will)e(study)j(in)e(detail)g(the)i(simple)d
(example)h(of)g(the)i(mapping)c(of)i(a)h(3)5 b Fe(\002)g
Fq(4)12 b(grid)g(on)o(to)f(the)i(graph)e Fm(P)1823 1127
y Fd(3)1847 1121 y Fe(\002)5 b Fm(C)1914 1127 y Fd(4)1933
1121 y Fq(,)-64 1170 y(as)17 b(depicted)i(on)e(Figure)g(2.)27
b(In)17 b(this)g(problem,)g(the)g(t)o(w)o(o)g(top)q(ologies)f(can)i
(not)f(matc)o(h)e(rigorously)m(,)i(although)f(the)i(grid)e(is)-64
1220 y(clearly)c(a)g(subgraph)h(of)f(the)h(output)f(graph.)18
b(W)m(e)12 b(will)f(see)i(that)f(the)h(de\014nition)f(of)g(a)g(b)q(est)
i(neigh)o(b)q(orho)q(o)q(d)e(preserving)h(graph)-64 1270
y(em)o(b)q(edding)g(is)h(sometimes)e(not)i(a)f(clear)i(in)o(tuitiv)o(e)
d(notion.)-2 1320 y(The)19 b(de\014nition)e(of)g(the)i(mapping)d(w)o
(as)h(\014rst)i(tested)g(on)f(the)g(feed-forw)o(ard)g(probabilistic)f
(approac)o(h)h(de\014ned)h(ab)q(o)o(v)o(e.)-64 1370 y(The)c(input)f(v)o
(ectors)h(w)o(ere)g(c)o(hosen)h(to)e(represen)o(t)i(the)f(subgraphs)g
(induced)g(b)o(y)f(the)h(balls)e(of)h(diameter)f(1)h(cen)o(tered)j(on)d
(eac)o(h)-64 1420 y(v)o(ertex,)j(and)f(all)f(of)g(the)h(subgraphs)h
(de\014ned)g(as)f(simple)e(edges.)26 b(F)m(or)15 b(instance,)i(the)f
(subgraph)h(spanned)f(b)o(y)g(the)h(v)o(ertices)-64 1469
y(0)p Fm(;)7 b Fq(1)p Fm(;)g Fq(2)p Fm(;)g Fq(5)k(w)o(as)j(c)o(hosen)h
(as)f(an)g(input,)f(but)h(not)g(the)g(subgraph)h(spanned)f(b)o(y)g(0)p
Fm(;)7 b Fq(1)p Fm(;)g Fq(2)p Fm(;)g Fq(3.)-2 1519 y(The)16
b(matc)o(hing)d(b)q(et)o(w)o(een)j(the)g(t)o(w)o(o)f(graphs)g(is)g
(de\014ned)h(b)o(y)f(a)f(matrix)f(of)i(w)o(eigh)o(ts)g(joining)e(eac)o
(h)j(input)e(to)h(eac)o(h)h(output)-64 1569 y(v)o(ertex.)25
b(T)m(able)15 b(1)h(sho)o(ws)g(a)g(t)o(ypical)f(w)o(eigh)o(t)g(matrix)f
(obtained)i(after)g(learning.)23 b(The)17 b(n)o(um)o(b)q(er)e(at)h(the)
g Fm(i)p Fq(-th)g(ro)o(w)g(and)g Fm(j)r Fq(-th)-64 1619
y(column)c(is)i(the)h(w)o(eigh)o(t)e(corresp)q(onding)i(to)e(the)i
(connection)f(b)q(et)o(w)o(een)h(input)f(v)o(ertex)h
Fm(j)h Fq(and)e(output)g(v)o(ertex)g Fm(i)p Fq(.)19 b(The)14
b(largest)-64 1669 y(w)o(eigh)o(t)g(of)f(the)i(input)f(column)f
(determines)h(on)g(what)g(output)h(v)o(ertex)g(the)f(input)g(no)q(de)h
(is)f(mapp)q(ed,)f(if)g(the)i(matc)o(hing)d(is)i(to)-64
1718 y(b)q(e)j(de\014ned)h(as)f(a)f(one-to-one)h(corresp)q(ondence,)j
(as)c(a)h(mapping.)24 b(Some)15 b(examples)h(of)g(one-to-one)h(corresp)
q(ondences)j(are)-64 1768 y(depicted)c(in)e(Figure)h(2)f(sho)o(wing)g
(di\013eren)o(t)i(w)o(a)o(ys)e(found)h(b)o(y)f(the)h(algorithm)d(in)j
(whic)o(h)f(to)h(em)o(b)q(ed)f(the)h(grid)f(on)h(a)f
Fm(P)1814 1774 y Fd(3)1842 1768 y Fe(\002)c Fm(C)1914
1774 y Fd(4)1933 1768 y Fq(.)-64 1818 y(T)m(able)j(1)h(correp)q(onds)h
(to)f(Figure)g(2\(b\).)650 1890 y(T)m(able)f(1:)k(T)o(ypical)c(w)o
(eigh)o(t)h(matrix)p 318 1945 1417 2 v 318 1989 2 46
v 927 1975 a Fo(Input)f(lab)q(els)p 1735 1989 V 145 1991
1591 2 v 144 2036 2 46 v 170 2023 a(Output)p 318 2036
V 75 w(0)p 436 2036 V 99 w(1)p 554 2036 V 99 w(2)p 672
2036 V 99 w(3)p 790 2036 V 99 w(4)p 908 2036 V 99 w(5)p
1026 2036 V 99 w(6)p 1144 2036 V 99 w(7)p 1262 2036 V
100 w(8)p 1380 2036 V 99 w(9)p 1498 2036 V 89 w(10)p
1616 2036 V 80 w(11)p 1735 2036 V 145 2038 1591 2 v 144
2084 2 46 v 170 2070 a(0)p 318 2084 V 183 w(.)p 436 2084
V 107 w(.)p 554 2084 V 107 w(.)p 672 2084 V 107 w(.)p
790 2084 V 107 w(.)p 908 2084 V 108 w(.)p 1026 2084 V
107 w(.)p 1144 2084 V 78 w(0.45)p 1262 2084 V 79 w(.)p
1380 2084 V 107 w(.)p 1498 2084 V 78 w(0.52)p 1616 2084
V 50 w(1.00)p 1735 2084 V 145 2085 1591 2 v 144 2131
2 46 v 170 2117 a(1)p 318 2131 V 183 w(.)p 436 2131 V
107 w(.)p 554 2131 V 107 w(.)p 672 2131 V 107 w(.)p 790
2131 V 107 w(.)p 908 2131 V 108 w(.)p 1026 2131 V 78
w(0.68)p 1144 2131 V 79 w(.)p 1262 2131 V 107 w(.)p 1380
2131 V 78 w(0.20)p 1498 2131 V 50 w(1.00)p 1616 2131
V 50 w(0.20)p 1735 2131 V 145 2133 1591 2 v 144 2178
2 46 v 170 2165 a(2)p 318 2178 V 183 w(.)p 436 2178 V
107 w(.)p 554 2178 V 79 w(0.65)p 672 2178 V 78 w(.)p
790 2178 V 107 w(.)p 908 2178 V 79 w(0.20)p 1026 2178
V 50 w(1.00)p 1144 2178 V 50 w(0.20)p 1262 2178 V 79
w(.)p 1380 2178 V 107 w(.)p 1498 2178 V 78 w(0.20)p 1616
2178 V 79 w(.)p 1735 2178 V 145 2180 1591 2 v 144 2226
2 46 v 170 2212 a(3)p 318 2226 V 183 w(.)p 436 2226 V
107 w(.)p 554 2226 V 107 w(.)p 672 2226 V 79 w(0.33)p
790 2226 V 78 w(.)p 908 2226 V 108 w(.)p 1026 2226 V
78 w(0.94)p 1144 2226 V 50 w(0.99)p 1262 2226 V 79 w(.)p
1380 2226 V 107 w(.)p 1498 2226 V 107 w(.)p 1616 2226
V 78 w(0.33)p 1735 2226 V 145 2227 1591 2 v 144 2273
2 46 v 170 2259 a(4)p 318 2273 V 183 w(.)p 436 2273 V
107 w(.)p 554 2273 V 107 w(.)p 672 2273 V 107 w(.)p 790
2273 V 79 w(0.19)p 908 2273 V 79 w(.)p 1026 2273 V 107
w(.)p 1144 2273 V 107 w(.)p 1262 2273 V 78 w(0.99)p 1380
2273 V 50 w(0.73)p 1498 2273 V 79 w(.)p 1616 2273 V 107
w(.)p 1735 2273 V 145 2275 1591 2 v 144 2320 2 46 v 170
2306 a(5)p 318 2320 V 183 w(.)p 436 2320 V 107 w(.)p
554 2320 V 107 w(.)p 672 2320 V 107 w(.)p 790 2320 V
107 w(.)p 908 2320 V 79 w(0.46)p 1026 2320 V 79 w(.)p
1144 2320 V 107 w(.)p 1262 2320 V 78 w(0.17)p 1380 2320
V 50 w(1.00)p 1498 2320 V 50 w(0.53)p 1616 2320 V 79
w(.)p 1735 2320 V 145 2322 1591 2 v 144 2368 2 46 v 170
2354 a(6)p 318 2368 V 183 w(.)p 436 2368 V 78 w(0.59)p
554 2368 V 51 w(1.00)p 672 2368 V 50 w(0.40)p 790 2368
V 78 w(.)p 908 2368 V 108 w(.)p 1026 2368 V 78 w(0.19)p
1144 2368 V 79 w(.)p 1262 2368 V 107 w(.)p 1380 2368
V 107 w(.)p 1498 2368 V 107 w(.)p 1616 2368 V 107 w(.)p
1735 2368 V 145 2369 1591 2 v 144 2415 2 46 v 170 2401
a(7)p 318 2415 V 183 w(.)p 436 2415 V 107 w(.)p 554 2415
V 79 w(0.13)p 672 2415 V 50 w(0.80)p 790 2415 V 78 w(.)p
908 2415 V 108 w(.)p 1026 2415 V 107 w(.)p 1144 2415
V 78 w(0.73)p 1262 2415 V 79 w(.)p 1380 2415 V 107 w(.)p
1498 2415 V 107 w(.)p 1616 2415 V 107 w(.)p 1735 2415
V 145 2416 1591 2 v 144 2462 2 46 v 170 2448 a(8)p 318
2462 V 154 w(0.18)p 436 2462 V 79 w(.)p 554 2462 V 107
w(.)p 672 2462 V 107 w(.)p 790 2462 V 79 w(0.99)p 908
2462 V 50 w(0.18)p 1026 2462 V 79 w(.)p 1144 2462 V 107
w(.)p 1262 2462 V 78 w(0.68)p 1380 2462 V 79 w(.)p 1498
2462 V 107 w(.)p 1616 2462 V 107 w(.)p 1735 2462 V 145
2464 1591 2 v 144 2509 2 46 v 170 2496 a(9)p 318 2509
V 183 w(.)p 436 2509 V 107 w(.)p 554 2509 V 107 w(.)p
672 2509 V 107 w(.)p 790 2509 V 79 w(0.49)p 908 2509
V 50 w(1.00)p 1026 2509 V 50 w(0.43)p 1144 2509 V 79
w(.)p 1262 2509 V 107 w(.)p 1380 2509 V 107 w(.)p 1498
2509 V 107 w(.)p 1616 2509 V 107 w(.)p 1735 2509 V 145
2511 1591 2 v 144 2557 2 46 v 170 2543 a(10)p 318 2557
V 135 w(0.27)p 436 2557 V 50 w(1.00)p 554 2557 V 79 w(.)p
672 2557 V 107 w(.)p 790 2557 V 107 w(.)p 908 2557 V
79 w(0.66)p 1026 2557 V 79 w(.)p 1144 2557 V 107 w(.)p
1262 2557 V 107 w(.)p 1380 2557 V 107 w(.)p 1498 2557
V 107 w(.)p 1616 2557 V 107 w(.)p 1735 2557 V 145 2558
1591 2 v 144 2604 2 46 v 170 2590 a(11)p 318 2604 V 135
w(1.00)p 436 2604 V 50 w(0.49)p 554 2604 V 51 w(0.27)p
672 2604 V 78 w(.)p 790 2604 V 79 w(0.41)p 908 2604 V
79 w(.)p 1026 2604 V 107 w(.)p 1144 2604 V 107 w(.)p
1262 2604 V 107 w(.)p 1380 2604 V 107 w(.)p 1498 2604
V 107 w(.)p 1616 2604 V 107 w(.)p 1735 2604 V 145 2606
1591 2 v -2 2677 a Fq(More)g(generally)m(,)f(the)h(w)o(eigh)o(t)f
(matrix)e(describ)q(es)15 b(a)d(\\one-to-man)o(y")e(corresp)q(ondence)
15 b(made)d Fl(c)n(ontinuous)h Fq(b)o(y)f(the)h(learn-)-64
2727 y(ing)c(algorithm.)14 b(Note)d(that)f(the)g(one-w)o(a)o(y)f
(algorithm)f(inspired)i(b)o(y)f(the)i(SOFM)f(pro)q(duces)i(con)o(tin)o
(uous)d(but)h Fl(not)h Fq(bicon)o(tin)o(uous)-64 2777
y(maps)h(in)h(general:)k(the)d(direct)g(image)d(of)h(a)h(neigh)o(b)q
(orho)q(o)q(d)g(in)f(the)i(input)f(graph)g(is)g(not)g(in)f(general)h(a)
g(neigh)o(b)q(orho)q(o)q(d)g(in)f(the)-64 2827 y(output)i(graph)f
(\(see)i(for)e(instance)h(the)g(neigh)o(b)q(orho)q(o)q(d)f(cen)o(tered)
j(at)d(input)g(v)o(ertex)h(6\).)k(This)13 b(limitation)d(allo)o(ws)j
(one)g(in)g(fact)-64 2877 y(to)h(disco)o(v)o(er)g(some)f(un)o(usual)h
(w)o(a)o(ys)f(in)h(whic)o(h)f(to)h(em)o(b)q(ed)f(a)h(3)9
b Fe(\002)g Fq(4)14 b(grid)f(in)h(the)g(graph)g Fm(P)1343
2883 y Fd(3)1370 2877 y Fe(\002)9 b Fm(C)1441 2883 y
Fd(4)1460 2877 y Fq(;)k(the)i(most)d(in)o(tuitiv)o(e)h(w)o(a)o(y)g(to)p
eop
%%Page: 5 5
5 4 bop -64 -22 a Fq(do)14 b(it)f(w)o(ould)g(b)q(e)h(as)g(sho)o(wn)g
(in)f(Figure)h(2\(a\).)k(This)c(em)o(b)q(edding)e(w)o(as)i(not)g
(actually)e(found)i(b)o(y)f(the)i(one-w)o(a)o(y)e(algorithm)e(but)-64
28 y(b)o(y)h(its)f(bicon)o(tin)o(uous)h(v)o(ersion.)17
b(The)12 b(simpler)f(con)o(tin)o(uous)h(v)o(ersion)f(algorithm)f(pro)q
(duced)j(only)d(the)j(t)o(w)o(o)e(graph)h(em)o(b)q(eddings)-64
77 y(as)i(dra)o(wn)f(in)g(Figure)h(2\(b\))f(and)h(\(c\).)k(By)c
(computing)e(the)i(con)o(tin)o(uit)o(y)f(measures,)g(it)g(can)h(b)q(e)g
(c)o(hec)o(k)o(ed)h(that)f(em)o(b)q(edding)e(\(a\))-64
127 y(is)h(in)g(fact)g(less)g(con)o(tin)o(uous)g(than)g(the)h(t)o(w)o
(o)f(other)g(em)o(b)q(eddings;)f(ho)o(w)o(ev)o(er,)h(when)h(the)g(con)o
(tin)o(uit)o(y)e(measures)h(are)h(computed)-64 177 y(for)j(the)g(in)o
(v)o(erse)h(and)f(direct)h(mappings,)d(it)i(can)g(b)q(e)g(c)o(hec)o(k)o
(ed)i(that)e(em)o(b)q(edding)f(\(a\))g(ac)o(hiev)o(es)i(the)g(b)q(est)g
(a)o(v)o(erage)f(p)q(erfor-)-64 227 y(mance.)g(These)e(simple)c
(examples)h(sho)o(w)h(that)g(the)h(b)q(est)g(neigh)o(b)q(orho)q(o)q(d)f
(preserving)h(mapping)d(is)i(not)f(realized)i(necessarily)-64
277 y(b)o(y)g(preserving)h(the)f(greatest)h(n)o(um)o(b)q(er)f(of)f
(edges.)-64 406 y Fn(3)67 b(What)23 b(should)g(graphs)g(represen)n(t)
-64 479 y Fq(This)16 b(section)h(examines)e(the)i(role)f(of)f(graphs)i
(as)f(a)f(represen)o(tational)i(ob)r(ject)g(in)f(neural)g(mo)q
(delling.)22 b(Graphs)16 b(ha)o(v)o(e)g(b)q(een)-64 528
y(used)f(in)e(computer)h(science)i(and)d(engineering)i(mainly)c(in)i(t)
o(w)o(o)h(w)o(a)o(ys:)j(as)d(a)g(net)o(w)o(ork)g(and)g(as)g(a)f
(relational)g(structure.)-64 645 y Fs(3.1)56 b(Graph)19
b(as)g(net)n(w)n(ork)-64 703 y Fq(The)14 b(expression)g(\\neural)g(net)
o(w)o(ork")f(originates)g(in)g(the)h(ph)o(ysiological)d(evidence)j(of)f
(the)h(electrical)g(nature)g(of)e(the)i(nerv)o(ous)-64
753 y(system)d(activit)o(y)g(and)g(in)f(the)i(anatomical)c(structure)14
b(of)c(the)i(basic)f(constituen)o(ts)i(of)d(the)i(neural)f(matter.)17
b(A)11 b(directed)i(graph,)-64 803 y(in)h(this)g(con)o(text,)g(is)f(a)h
(represen)o(tation)h(of)f(the)g(neural)g Fl(cir)n(cuitry)p
Fq(.)-2 853 y(This)i(pap)q(er)h(adv)o(o)q(cates)f(that,)g(if)f(graphs)h
(are)g(to)g(b)q(e)g(used)h(simply)d(as)h(a)h(rather)h(iconic)e
(represen)o(tation)i(of)f(the)g(neural)-64 903 y(anatom)o(y)m(,)11
b(w)o(e)j(are)g(missing)e(most)h(of)g(their)i(expressing)g(and)e
(structuring)i(p)q(o)o(w)o(er.)-2 952 y(Besides)h(the)e(fuzzy)h(seman)o
(tics)e(assigned)h(to)g(the)g(corresp)q(ondences)j(neuron-v)o(ertex)f
(and)d(synapse-edge,)i(there)g(is)f(little)-64 1002 y(evidence)g(that)f
(a)g(single)g(net)o(w)o(ork,)f(as)i(used)f(curren)o(tly)h(in)f(the)g
(\014eld)g(of)f(arti\014cial)g(neural)h(net)o(w)o(orks,)h(could)e(b)q
(e)i(isolated)e(as)h(a)-64 1052 y(meaningful)c(functional)i(unit)g
(dedicated)h(to)f(a)g(sp)q(eci\014c)i(task)f(in)f(the)h(brain.)17
b(The)12 b(reason)g(for)f(that)g(is)h(t)o(w)o(ofold:)j(1\))c(no)g
(neuron)-64 1102 y(has)16 b(a)g(sp)q(eci\014c)h(and)f(imm)o(utabl)o(e)d
(functional)i(role)h(since)h(it)f(ma)o(y)d(con)o(tribute,)k(at)f(the)g
(same)f(time,)g(to)h(sev)o(eral)g(concurren)o(t)-64 1152
y(functions,)e(or)h(to)f(a)g(single)g(one)g(dep)q(ending)h(on)f(the)h
(con)o(text,)g(and)f(2\))g(no)g(subnet)o(w)o(ork)h(can)g(b)q(e)g
(really)e(iden)o(ti\014ed)i(from)d(the)-64 1202 y(amorphous)h(nerv)o
(ous)h(anatom)o(y)m(,)d(and)j(esp)q(ecially)g(in)f(the)i(cortex.)-2
1251 y(Let's)f(detail)f(this)h(last)f(argumen)o(t)f(in)h(the)h(ligh)o
(t)e(of)h(one)h(anatomical)c(\014nding.)18 b(It)13 b(has)h(b)q(een)g
(calculated)g(that)f(no)g(neuron)-64 1301 y(is)h(farther)h(than)f(t)o
(w)o(o)g(or)g(three)i(synapses)g(a)o(w)o(a)o(y)d(from)f(an)o(y)i(other)
h(neuron)g(in)f(the)g(cortex)i([2)o(];)d(this)i(exp)q(erimen)o(tal)e
(measure)-64 1351 y(sho)o(ws)h(that)f(the)g(diameter)f(of)h(the)g
(total)g(graph)f(of)h(real)g(neural)g(connections)h(is)f(less)g(than)g
(3.)18 b(A)13 b(result)h(on)e(random)g(graphs)-64 1401
y(sho)o(ws)19 b(that)g(almost)e(all)g(graphs)i(ha)o(v)o(e)g(diameter)f
(2.)807 1386 y Fd(1)858 1401 y Fq(This)h(means)f(that)g(a)h(precise)h
(pattern)g(of)e(connectivities)h(of)f(the)-64 1451 y(neural)d(graph)f
(ma)o(y)e(b)q(e)j(di\016cult)e(to)h(distinguish)g(from)f(a)h(p)q(o)q
(orly)f(structured)k(random)12 b(graph.)19 b(The)c(problem)e(of)h
(isolating)-64 1500 y(a)f(functional)e(graph)i(in)f(the)i(neural)e
(graph)h(is)f(emphasized)h(b)o(y)f(another)i(result)f(sa)o(ying)f(that)
h(an)o(y)f(graph)h(can)g(b)q(e)g(em)o(b)q(edded)-64 1550
y(as)j(an)f(induced)h(subgraph)g(in)e(a)i(diameter-mini)o(m)o(al)795
1535 y Fd(2)826 1550 y Fq(sup)q(ergraph)h(of)e(diameter)f(2;)h(this)h
(could)f(suggest)h(that)g(an)o(y)f(circuit)-64 1600 y(net)o(w)o(ork)j
(p)q(oten)o(tially)e(exists)i(in)e(the)i(global)e(neural)h(arc)o
(hitecture,)j(whic)o(h)d(is)g(fortunate)g(if)g(the)h(cen)o(tral)f(nerv)
o(ous)h(system)-64 1650 y(w)o(an)o(ts)c(to)g(b)q(e)g(adaptiv)o(e,)f
(but)h(dreadful)g(for)g(studying)f(its)h(functionalities.)-64
1766 y Fs(3.2)56 b(Graph)19 b(as)g(relational)e(structure)-64
1825 y Fq(Most)c(neuroph)o(ysiologists)e(b)q(eliev)o(e)i(that)f(the)h
(electrical)f(activit)o(y)g(of)f(the)i(neurons)g(is)f(the)h(main)d
(feature)j(in)e(the)i(information)-64 1875 y(pro)q(cessing)k(of)e(the)h
(brain.)22 b(Electrical)16 b(signals)e(in)h(neurons)i(tak)o(e)e(the)h
(form)e(of)h(spik)o(es)h(with)f(v)n(arious)f(frequencies.)25
b(A)15 b(\014rst)-64 1924 y(view)c(considers)h(a)e(neuron)h(as)g(an)g
(input-output)f(device)i(whic)o(h)e(\014res)i(with)e(a)h(frequency)h
(correlated)f(with)g(the)g(certain)o(t)o(y)g(that)-64
1974 y(a)j(giv)o(en)g(ev)o(en)o(t)h(has)f(o)q(ccurred.)21
b(Another)15 b(view,)f(considers)i(that)e(the)h(useful)f(notion)g(to)g
(explain)g(the)g(nature)h(of)f(the)h(neural)-64 2024
y(co)q(de)j(is)f Fl(c)n(orr)n(elation)f Fq(b)q(et)o(w)o(een)j(neuron)e
(\014rings;)i(there)f(seems)f(to)g(b)q(e)h(more)e(and)h(more)f
(evidence)j(of)d(this)h(fact)g([4,)f(6,)h(11)o(].)-64
2074 y(In)o(teractions)c(b)q(et)o(w)o(een)h(neurons)f(are)g(w)o(eak,)f
(ev)o(en)h(when)g(neurons)g(are)g(adjacen)o(t)f(and)g(coactiv)n(ated)g
(in)g(relation)g(to)g(the)h(same)-64 2124 y(external)h(stim)o(ulus.)i
(T)m(o)c(transmit)g(its)h(information,)d(eac)o(h)k(individual)d(neuron)
j(requires)g(the)g(co)q(op)q(eration)f(of)g(man)o(y)e(others)-64
2173 y(\014ring)j Fl(synchr)n(onously)h Fq(with)e(it.)-2
2223 y(These)i(exp)q(erimen)o(tal)d(observ)n(ations)i(suggest)g(that)f
(the)h(righ)o(t)f(lev)o(el)g(of)f(description)i(of)f(the)h(neural)f
(activit)o(y)f(is)h(in)g(terms)-64 2273 y(of)i(transien)o(t)h
Fl(assemblies)f Fq(of)g(correlated)i(neurons.)23 b(Graph)15
b(language)g(and)g(concepts)i(can)f(b)q(e)g(useful)g(to)f(neural)h(mo)q
(dels)e(if)-64 2323 y(edges)i(are)e(though)o(t)g(of)g(as)g(represen)o
(tations)j(of)c(correlations)i(among)d(neuron)j(activities.)k(The)c
(graph)f(represen)o(tation)i(of)d(a)-64 2373 y(neural)f(net)o(w)o(ork)f
(is)g(only)g(relational)f(and)h(do)q(es)h(not)f(in)o(tend)g(to)h
(represen)o(t)h(the)f(details)f(of)g(the)h(ph)o(ysical)e(connectivit)o
(y)i(sc)o(heme)-64 2423 y(\(excitatory)h(or)g(inhibitory)f
(connections\),)i(nor)e(the)i(dynamics)d(of)h(the)i(activit)o(y)m(.)i
(Correlation)d(is)f(a)h(global)e(notion)h(resulting)-64
2472 y(from)k(a)i(p)q(osteriori)g(data)f(analysis;)h(a)g(no)q(de)g
(will)e(still)h(stand)h(for)f(a)h(sc)o(hematic)f(neuron,)i(but)f(an)f
(edge)h(in)g(a)f(correlation)-64 2522 y(graph)e(will)f(represen)o(t)j
(simply)d(the)h(p)q(ossibilit)o(y)f(that)h(t)o(w)o(o)g(neurons)h
(\014re)g(sync)o(hronously)m(.)22 b(Therefore,)16 b Fl(c)n(orr)n
(elation)f(gr)n(aphs)p Fq(,)-64 2572 y(b)o(y)g(comparison)e(to)i(the)h
(thinner)f(anatomical)d(structures,)17 b(are)f(macroscopic)e
(descriptions.)22 b(It)15 b(seems)g(ob)o(vious,)f(ho)o(w)o(ev)o(er,)-64
2622 y(that)f(ph)o(ysically)e(disconnected)j(neurons)g(cannot)e(ha)o(v)
o(e)h(an)o(y)f(correlation,)g(and)g(therefore)i(can)e(not)h(b)q(e)g
(link)o(ed)f(in)g(the)h(graph.)p -64 2656 573 2 v -18
2683 a Fc(1)0 2695 y Fg(The)e(precise)e(result)h([3)o(])h(requires)e
(some)h(de\014nitions:)i(\000\()p Fb(n;)6 b(p)p Fg(\))11
b(is)g(the)f(set)g(of)h(graphs)e(with)i(order)f Fb(n)i
Fg(whose)e(edges)g(are)g(c)o(hosen)f(indep)q(enden)o(tl)o(y)-64
2734 y(with)j(probabilit)o(y)c Fb(p)p Fg(.)16 b(F)m(or)11
b(a)h(prop)q(ert)o(y)d Fr(P)s Fg(,)i(w)o(e)h(sa)o(y)f(that)g(a)g
(random)f(graph)g Fb(G)g Fr(2)g Fg(\000\()p Fb(n;)c(p)p
Fg(\))11 b(has)g(prop)q(ert)o(y)e Fr(P)15 b Fa(almost)e(sur)n(ely)f
Fg(if)g(Pr\()p Fb(G)g Fg(has)f(prop)q(ert)o(y)-64 2774
y Fr(P)s Fg(\))p Fr(!)f Fg(1)i(as)f Fb(n)g Fr(!)f(1)p
Fg(.)17 b(It)12 b(can)e(b)q(e)i(pro)o(v)o(ed)e(that)h(if)g
Fb(p)629 2762 y Fc(2)646 2774 y Fb(n)e Fr(\000)f Fg(2)e(lg)f
Fb(n)11 b Fr(!)g(1)h Fg(and)f Fb(n)983 2762 y Fc(2)1001
2774 y Fg(\(1)c Fr(\000)h Fb(p)p Fg(\))i Fr(!)h(1)p Fg(,)h(then)f
Fb(G)f Fr(2)g Fg(\000\()p Fb(n;)c(p)p Fg(\))12 b(almost)e(surely)g(has)
h(diameter)f(2.)-64 2813 y(The)i(conditions)d(are)h(true)h(in)g
(particular)e(for)i Fb(p)e Fg(=)i(1)p Fb(=)p Fg(2.)-18
2841 y Fc(2)0 2853 y Fg(A)h(diameter-m)o(inim)o(al)c(graph)i
Fb(G)i Fg(is)g(suc)o(h)f(that)f(for)h(all)g(edges)f Fb(e)g
Fr(2)g Fb(E)r Fg(\()p Fb(G)p Fg(\),)h Fb(diam)p Fg(\()p
Fb(G)d Fr(\000)g Fb(e)p Fg(\))i Fb(>)h(diam)p Fg(\()p
Fb(G)p Fg(\).)p eop
%%Page: 6 6
6 5 bop -64 -22 a Fs(3.3)56 b(Dynamic)17 b(graphs)-64
36 y Fq(If)12 b(the)g(basis)g(of)f(the)h(neural)g(co)q(de)h(is)f(the)g
(concept)h(of)e(temp)q(oral)g(correlation,)g(the)i(formal)c(to)q(ols)i
(that)h(should)g(b)q(e)g(dev)o(elopp)q(ed)-64 86 y(for)h(neural)g(mo)q
(delling)d(ough)o(t)j(to)g(include)g(b)q(oth)g(dynamic)e(and)i
(relational)f(expressing)i(capabilities.)j(More)c(precisely)m(,)h(they)
-64 136 y(should)g(b)q(e)h(able)f(to)g(express)i(explicitly)e(the)h
(temp)q(oral)d(ev)o(olution)i(of)f(the)i(relational)e(structure)k(of)c
(neural)i(activit)o(y)m(.)i(What)-64 186 y(should)f(b)q(e)g(dev)o
(elopp)q(ed)h(is)e(a)h(theory)g(of)f(dynamic)f(correlation)i(graphs,)g
(indep)q(enden)o(tly)g(of)f(the)i(ph)o(ysical,)e(electrical)h(and)-64
236 y(c)o(hemical)d(phenomena)g(that)h(pro)q(duced)h(the)f
(correlation.)-2 286 y(The)f(only)e(attempt)g(to)g(ful\014ll)g(part)h
(of)f(this)h(ob)r(jectiv)o(e)g(is)g(the)g(pioneering)g(w)o(ork)f(of)g
(v)o(on)h(der)g(Malsburg)g(and)g(Bienensto)q(c)o(k)-64
335 y([12)o(,)17 b(13])g(who)g(in)o(tro)q(duced)h(the)g(concepts)i(of)c
(fast)i(synaptic)g(plasticit)o(y)e(and)i(dynamic)e(links.)28
b(Their)17 b(ideas)h(ga)o(v)o(e)f(rise)h(to)-64 385 y(sev)o(eral)d
(applications)f(in)g(pattern)i(recognition,)e(but)h(could)f(not)h
(generalize)g(to)g(e\013ectiv)o(e)h(mathematical)11 b(mo)q(dels)j
(actually)-64 435 y(needed)i(if)d(one)h(w)o(an)o(ts)g(to)f(understand,)
i(describ)q(e)h(and)d(repro)q(duce)j(the)f(phenomenology)d(of)h(neural)
h(activit)o(y)m(.)-2 485 y(One)h(am)o(bition)d(of)h(this)i(pap)q(er)g
(is)f(to)g(promote)f(the)i(use)g(of)e(graphs,)h(and)g(more)g(generally)
g(of)f(com)o(binatorial)e(relational)-64 535 y(structures,)17
b(as)e(the)h(basic)f(mathematical)d(ob)r(jects)k(for)e(neural)h(mo)q
(delling,)d(and)j(lea)o(v)o(e)f(aside)h(the)h(notion)e(of)g(net)o(w)o
(ork,)h(to)q(o)-64 584 y(readily)h(asso)q(ciated)g(with)g(the)g
(circuitry)h(of)e(the)h(nerv)o(ous)h(system.)24 b(The)16
b(inheren)o(t)h(prop)q(erties)g(of)e(graphs)h(ha)o(v)o(e)g(not)g(b)q
(een)-64 634 y(generally)e(studied)g(p)q(er)g(se)h(in)e(the)h(neural)g
(net)o(w)o(ork)g(litterature,)g(and)f(there)i(is)f(still)e(a)i(h)o(uge)
g(amoun)o(t)d(of)i(results)i(to)f(explore)-64 684 y(that)g(could)g
(shed)h(ligh)o(t)d(on)i(some)f(asp)q(ects)j(of)d(the)h(nerv)o(ous)h
(system)f(b)q(eha)o(vior)f(and)h(organization.)-64 813
y Fn(References)-43 886 y Fq([1])20 b(H.-U.)12 b(Bauer)j(and)f(K.)f(P)o
(a)o(w)o(elzik.)18 b(Quan)o(tifying)12 b(the)i(neigh)o(b)q(orho)q(o)q
(d)g(preserv)n(ation)g(of)g(self-organizing)e(feature)j(maps.)22
936 y Fl(IEEE)g(T)m(r)n(ansactions)g(on)g(Neur)n(al)f(Networks)p
Fq(,)f Ff(3)p Fq(:570{579,)e(1992.)-43 1019 y([2])20
b(V.)14 b(Braiten)o(b)q(erg)i(and)f(A.)g(Sc)o(h)o(uz.)22
b Fl(A)o(natomy)16 b(of)g(the)g(Cortex)p Fq(,)e(v)o(olume)f
Ff(18)i Fq(of)f Fl(Studies)i(of)g(Br)n(ain)g(F)m(unction)p
Fq(.)22 b(Springer)22 1069 y(V)m(erlag,)12 b(Berlin,)i(1991.)-43
1152 y([3])20 b(F.)13 b(Buc)o(kley)h(and)g(F.)g(Harary)m(.)j
Fl(Distanc)n(e)e(in)g(Gr)n(aphs)p Fq(.)j(Addison-W)m(esley)m(,)13
b(Redw)o(o)q(o)q(d)h(Cit)o(y)m(,)e(Ca,)h(1990.)-43 1235
y([4])20 b(R.)13 b(Ec)o(khorn,)i(R.)e(Bauer,)i(W.)f(Jordan,)g(M.)g
(Brosc)o(h,)h(W.)f(Kruse,)h(M.)f(Munk,)g(and)g(H.J.)g(Reitb)q(o)q(c)o
(k.)20 b(Coheren)o(t)15 b(oscilla-)22 1285 y(tions:)i(A)d(mec)o(hanism)
e(of)h(feature)i(linking)d(in)h(the)i(visual)e(cortex?)24
b Fl(Biolo)n(gic)n(al)14 b(Cyb)n(ernetics)p Fq(,)f Ff(60)p
Fq(:121{130,)e(1988.)-43 1368 y([5])20 b(M.R.)11 b(Garey)h(and)g(D.S.)g
(Johnson.)k Fl(Computers)d(and)h(Intr)n(actability)f(|)h(A)f(guide)h
(to)g(the)f(the)n(ory)h(of)f(NP-c)n(ompleteness.)22 1417
y Fq(W.H.)f(F)m(reeman,)h(San)h(F)m(rancisco,)f(1979.)-43
1500 y([6])20 b(C.M.)c(Gra)o(y)h(and)g(W.)g(Singer.)29
b(Stim)o(ulus)15 b(sp)q(eci\014c)k(neuronal)f(oscillations)e(in)h(the)h
(cat)g(visual)f(cortex.)29 b Fl(Pr)n(o)n(c)n(e)n(e)n(dings)22
1550 y(National)14 b(A)n(c)n(ademy)i(of)e(Scienc)n(e)i(U.S.A.)p
Fq(,)c Ff(86)p Fq(:1698{1702,)f(1989.)-43 1633 y([7])20
b(S.)14 b(Herbin.)22 b(Represen)o(tation)15 b(and)g(formation)e(of)h(a)
h(structure)i(of)d(concepts)j({)d(a)h(graph)g(theory)g(and)g(neural)g
(net)o(w)o(ork)22 1683 y(approac)o(h.)i(Master's)e(thesis,)g(Univ)o
(ersit)o(y)e(of)h(Illinois)e(at)i(Urbana-Champaign,)c(1992.)-43
1766 y([8])20 b(T.K.)13 b(Kohonen.)18 b Fl(Self-or)n(ganization)d(and)g
(Asso)n(ciative)g(Memory)p Fq(.)j(Springer)c(V)m(erlag,)f(Berlin,)h
(third)g(edition,)e(1989.)-43 1849 y([9])20 b(T.)13 b(Martinetz)i(and)e
(K.)h(Sc)o(h)o(ulten.)k(T)m(op)q(ology)12 b(represen)o(ting)k(net)o(w)o
(orks.)j Fl(Neur)n(al)14 b(Networks)p Fq(,)e Ff(7)p Fq(\(3\):507{522,)f
(1994.)-64 1932 y([10])20 b(H.)14 b(Ritter)i(and)f(K.)g(Sc)o(h)o
(ulten.)23 b(Con)o(v)o(ergence)16 b(prop)q(erties)h(of)e(k)o(ohonen's)g
(top)q(ology)f(conserving)i(maps:)j(\015uctuations,)22
1982 y(stabilit)o(y)m(,)11 b(and)j(dimension)e(selection.)19
b Fl(Biolo)n(gic)n(al)14 b(Cyb)n(ernetics)p Fq(,)f Ff(60)p
Fq(:pp.59{71,)e(1988.)-64 2065 y([11])20 b(E.)d(V)m(aadia,)h(E.)g
(Ahissar,)h(H.)f(Bergman,)g(and)g(Y.)g(La)o(vner.)31
b(Correlated)19 b(activit)o(y)e(of)h(neurons:)27 b(a)18
b(neural)g(co)q(de)h(for)22 2115 y(higher)h(brain)g(functions?)55
b(In)20 b(J.)g(Kruger,)i(editor,)g Fl(Neur)n(onal)f(Co)n(op)n(er)n
(ativity)p Fq(,)f(Springer)h(Series)g(in)f(Synergetics.)22
2165 y(Springer)14 b(V)m(erlag,)f(1991.)-64 2248 y([12])20
b(C.)12 b(v)o(on)g(der)i(Malburg.)h(Synaptic)e(plasticit)o(y)f(as)h
(basis)g(of)f(brain)h(organization.)i(In)d(J.-P)m(.)g(Changeux)h(and)g
(M.)f(Konishi,)22 2297 y(editors,)h Fl(The)i(Neur)n(al)g(and)g(Mole)n
(cular)g(Bases)g(of)g(L)n(e)n(arning)p Fq(.)e(John)h(Wiley)f(&)i(Sons,)
e(1987.)-64 2380 y([13])20 b(C.)10 b(v)o(on)g(der)h(Malsburg)f(and)g
(E.)h(Bienensto)q(c)o(k.)j(Statistical)9 b(co)q(ding)i(and)f
(short-term)g(synaptic)h(plasticit)o(y:)16 b(a)10 b(sc)o(heme)g(for)22
2430 y(kno)o(wledge)j(represen)o(tation)j(in)d(the)i(brain.)i(In)d(E.)g
(Bienensto)q(c)o(k)i(et)e(al.,)e(editors,)i Fl(Disor)n(der)n(d)h
(Systems)g(and)h(Biolo)n(gic)n(al)22 2480 y(Or)n(ganization)p
Fq(.)d(Springer-V)m(erlag,)g(1986.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
